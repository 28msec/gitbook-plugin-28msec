{
  "swagger": "2.0",
  "info": {
    "title": "Cellstore API",
    "description": "<h3>CellStore API</h3>",
    "contact": {
      "name": "API Support/Feedback",
      "url": "http://www.28.io/",
      "email": "support@28.io"
    },
    "version": "vX.X.X"
  },
  "schemes": [
    "http"
  ],
  "host": "cellstore.28.io",
  "basePath": "/v1/_queries/public",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/docs": {
      "get": {
        "summary": "Get the documentation of the CellStore API.",
        "operationId": "getDocs",
        "responses": {
          "200": {
            "description": "Returns the documentation of the CellStore API in the OpenAPI specification format.",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/api/components": {
      "get": {
        "summary": "Retrieve a summary for all components of a given archive",
        "operationId": "getComponents",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/archiveFiscalYear_ALL"
          },
          {
            "$ref": "#/parameters/archiveFiscalPeriod_ALL"
          },
          {
            "$ref": "#/parameters/archive-tag"
          },
          {
            "$ref": "#/parameters/aid"
          },
          {
            "$ref": "#/parameters/section"
          },
          {
            "$ref": "#/parameters/hypercube_SINGLE"
          },
          {
            "$ref": "#/parameters/disclosure"
          },
          {
            "$ref": "#/parameters/reportElement"
          },
          {
            "$ref": "#/parameters/label_component"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/validate_components"
          },
          {
            "$ref": "#/parameters/language"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all components for the given archive",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity could be found. / No such archive could be found",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Retrieve information about all components of a archive",
            "description": "Retrieve information about all components of a particular archive which is identified by its accession number. Return the result as JSON.",
            "profile": [
              "sec"
            ],
            "parameters": {
              "aid": "0000021344-13-000039"
            }
          },
          {
            "title": "Retrieve information about all components of COCA COLA's latest 10-K",
            "description": "Retrieve information about all components of a particular archive which is identified by its accession number. Return the result as JSON.",
            "profile": [
              "sec"
            ],
            "parameters": {
              "ticker": "ko"
            }
          },
          {
            "title": "Retrieve information about all components of NIPPON STEEL & SUMITOMO METAL CORPORATION's 2014 Q1 archive.",
            "description": "Retrieve information about all components of a particular archive which is identified by a company ID and a fiscal period. Return the result as JSON.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "eid": "http://disclosure.edinet-fsa.go.jp E01225-000",
              "archiveFiscalYear": 2014,
              "archiveFiscalPeriod": "Q1"
            }
          }
        ]
      }
    },
    "/api/entities": {
      "get": {
        "summary": "Retrieve metadata about the entities that submit archives. These entities are also referred to by facts with the xbrl:Entity aspect, of which the values are called Entity IDs (EIDs). One entity might have several EIDs.",
        "operationId": "getEntities",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "name": "entity-search",
            "in": "query",
            "description": "Includes in the results the entities whose name match this full-text query",
            "required": false,
            "type": "string",
            "x-profile": [
              "japan"
            ]
          },
          {
            "name": "entity-search-offset",
            "in": "query",
            "description": "Includes in the results the entities whose name match the entity-search parameter skipping the first entity-search-offset results (default: 0)",
            "required": false,
            "type": "integer",
            "x-profile": [
              "japan"
            ]
          },
          {
            "name": "entity-search-limit",
            "in": "query",
            "description": "Includes in the results the entities whose name match the entity-search parameter limited to a maximum of entity-search-limit results (default: 10)",
            "required": false,
            "type": "integer",
            "x-profile": [
              "japan"
            ]
          },
          {
            "name": "language",
            "default": "en-US",
            "in": "query",
            "description": "Specifies in which language to perform the entity-search query (default: en-US)",
            "required": false,
            "type": "string",
            "enum": [
              "en-US",
              "en",
              "ja"
            ],
            "x-profile": [
              "japan"
            ]
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns query listing",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Get all companies as JSON.",
            "description": "Retrieve information about all entities. Return the result as JSON.",
            "parameters": {
              "format": "json"
            }
          },
          {
            "title": "Get all companies as XML.",
            "description": "Retrieve information about all entities. Return the result as XML.",
            "parameters": {
              "format": "xml"
            }
          },
          {
            "title": "Get all NIKKEI companies as XML.",
            "description": "Retrieve information about all NIKKEI companies. Return the result as XML",
            "profile": [
              "japan"
            ],
            "parameters": {
              "entity-tag": "NIKKEI",
              "format": "xml"
            }
          },
          {
            "title": "Get all DOW30 companies as CSV.",
            "profile": [
              "sec"
            ],
            "description": "Retrieve information about all DOW30 companies. Return the result as CSV.",
            "parameters": {
              "entity-tag": "DOW30",
              "format": "csv"
            }
          },
          {
            "title": "Get all Japanese companies containing \"Nippon\".",
            "profile": [
              "japan"
            ],
            "description": "Retrieve information about Japanese companies containing \"Nippon\".",
            "parameters": {
              "entity-search": "Nippon"
            }
          },
          {
            "title": "Get all Japanese companies containing \"新日\".",
            "profile": [
              "japan"
            ],
            "description": "Retrieve information about Japanese companies containing \"新日\".",
            "parameters": {
              "entity-search": "新日",
              "language": "ja"
            }
          }
        ]
      },
      "post": {
        "summary": "Add or update entity. The entities are identified with Entity IDs (EIDs).\n\nAn entity must be specified as a JSON object that must be valid against a JSound schema.  It can be either taken from the output of a GET request to the same endpoint (in which case it will be valid), or created manually.\n\nFor convenience, we offer a user-friendly summary of the fields involved. The JSound schema is available on request.\n\n#### Body properties\n\n| Field | Type | Presence | Content |\n|-------|------|----------|---------|\n| EID   | string | optional | The entity ID (EID). |\n| EIDs  | array of strings (at least one) | required if EID is absent | The EIDs, if more than one EID exists for this entity. Must be present if and only if EID is absent. |\n| Profiles | object | optional | Maps profile names to additional profile-specific information. The profile-specific information must have a Name field containing the profile name, that is, identical to its key. The other fields in the profile information is not restricted. |\n\nAdditionally, the following field is allowed for the purpose of feeding back the output of the entities endpoint as input:\n\n- Archives (string)\n\nSeveral entities can be created at the same time by posting a sequence of non-comma-separated JSON objects as above.\n",
        "operationId": "addEntities",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "name": "entity",
            "in": "body",
            "description": "The entity objects, which must be supplied in the body of the request, and which must satisfy the constraints described in the field table.",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entities have been added.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "One of the supplied entities is invalid.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "409": {
            "description": "Duplicate entity in the input or entity already exists.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Add an entity",
            "description": "Adds a new entity.",
            "method": "post",
            "body": "{ \"EID\": \"http://www.example.com 001\" }"
          }
        ]
      },
      "delete": {
        "summary": "Deletes an entity.",
        "operationId": "deleteEntity",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/eid_SINGLE"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/ticker"
          }
        ],
        "responses": {
          "204": {
            "description": "Entity has been deleted.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Cannot delete more than one entity at a time (safety mechanism). Or, Archives still exist for this entity.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity could be found.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": null
      },
      "patch": {
        "summary": "Update one or more entities with partial information",
        "operationId": "editEntities",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "name": "patch",
            "in": "body",
            "description": "The patch object, which will be merged into each entity (the entities must be valid after applying it).\n\nUpdating the EID of an entity is not allowed.\n",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the patched entities",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request: a parameter is missing or invalid, or an entity is invalid after applying the patch, or an EID was updated",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Access denied",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity could be found.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        }
      }
    },
    "/api/facts": {
      "get": {
        "summary": "Retrieve one or more facts for a combination of archives.",
        "operationId": "getFacts",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format_atom"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/concept"
          },
          {
            "$ref": "#/parameters/fiscalYear"
          },
          {
            "$ref": "#/parameters/fiscalPeriod"
          },
          {
            "$ref": "#/parameters/fiscalPeriodType"
          },
          {
            "$ref": "#/parameters/archiveFiscalYear"
          },
          {
            "$ref": "#/parameters/archiveFiscalPeriod"
          },
          {
            "$ref": "#/parameters/map"
          },
          {
            "$ref": "#/parameters/rule"
          },
          {
            "$ref": "#/parameters/report"
          },
          {
            "$ref": "#/parameters/additional-rules"
          },
          {
            "$ref": "#/parameters/labels"
          },
          {
            "$ref": "#/parameters/metadata"
          },
          {
            "$ref": "#/parameters/audit-trails"
          },
          {
            "$ref": "#/parameters/open"
          },
          {
            "$ref": "#/parameters/prefix:dimension"
          },
          {
            "$ref": "#/parameters/prefix:dimension::type"
          },
          {
            "$ref": "#/parameters/prefix:dimension::default"
          },
          {
            "$ref": "#/parameters/prefix:dimension::category"
          },
          {
            "$ref": "#/parameters/prefix:dimension::visible"
          },
          {
            "$ref": "#/parameters/prefix:dimension::slicer"
          },
          {
            "$ref": "#/parameters/prefix:dimension::column"
          },
          {
            "$ref": "#/parameters/prefix:dimension::aggregation"
          },
          {
            "$ref": "#/parameters/aggregation-function"
          },
          {
            "$ref": "#/parameters/validate_facts"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the fact listing",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request: a parameter is missing or invalid or total is used together with csv or excel serialization",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity could be found. / No such archive could be found",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Retrieve us-gaap:Assets for DOW30",
            "description": "Retrieve the value of us-gaap:Assets for all DOW30 entities for the latest reported year. Bring in all data regardless of which characteristic. Return the result as JSON",
            "profile": [
              "sec"
            ],
            "parameters": {
              "concept": "us-gaap:Assets",
              "entity-tag": "dow30"
            }
          },
          {
            "title": "Count facts on Coca Cola over 2012/2013/2014 FY",
            "description": "Count the number of facts reported by coca cola in FY 2012/13/14",
            "profile": [
              "sec"
            ],
            "parameters": {
              "ticker": "ko",
              "fiscalYear": [
                "2012",
                "2013",
                "2014"
              ],
              "fiscalPeriod": "FY",
              "count": "true"
            }
          },
          {
            "title": "Retrieve us-gaap:Assets for DOW30 which relates to the root reporting entity only.",
            "description": "Retrieve the value of us-gaap:Assets for all DOW30 entities for the latest reported year which relates to the root reporting entity only. Return the result as JSON.",
            "profile": [
              "sec"
            ],
            "parameters": {
              "concept": "us-gaap:Assets",
              "dei:LegalEntityAxis": "sec:DefaultLegalEntity",
              "entity-tag": "dow30"
            }
          },
          {
            "title": "Retrieve fac:NetCashFlow for DOW30",
            "description": "Retrieve the value of fac:NetCashFlow (using the FundamentalAccountingConcepts map) for the DOW30 entities for the year 2011. Return the result as CSV.",
            "profile": [
              "sec"
            ],
            "parameters": {
              "concept": "fac:NetCashFlow",
              "report": "FundamentalAccountingConcepts",
              "entity-tag": "dow30",
              "fiscalYear": "2011",
              "format": "csv"
            }
          },
          {
            "title": "Get value of Total Assets and Profit/Loss by company name/ID for Q1/2014",
            "description": "Get value of Total Assets and Profit/Loss by company name/ID for Q1/2014.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "edinetcode": "E02529",
              "fiscalPeriod": "Q1",
              "fiscalYear": 2014,
              "concept": [
                "jpcrp-cor:TotalAssetsIFRSSummaryOfBusinessResults",
                "jpcrp-cor:ProfitLossAttributableToOwnersOfParentIFRSSummaryOfBusinessResults"
              ]
            }
          },
          {
            "title": "Get value of current assets for each fiscal year for E02513.",
            "description": "Get value of current assets for each fiscal year for E02513.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "edinetcode": "E02513",
              "fiscalPeriod": "FY",
              "fiscalYear": "ALL",
              "concept": [
                "jppfs-cor:Assets",
                "jp-t-cte:Assets"
              ],
              "jppfs-cor:ConsolidatedOrNonConsolidatedAxis": "ALL",
              "jppfs-cor:ConsolidatedOrNonConsolidatedAxis::default": "jppfs-cor:NonConsolidatedMember"
            }
          },
          {
            "title": "Get Number of Shares held by major shareholders by company name/ID for Q2/2014",
            "description": "Get Number of Shares held by major shareholders by company name/ID for Q2/2014.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "xbrl:Entity": "http://disclosure.edinet-fsa.go.jp E02529-000",
              "fiscalPeriod": "Q2",
              "fiscalYear": 2014,
              "concept": [
                "jpcrp-cor:NumberOfSharesHeld",
                "jpcrp-cor:ShareholdingRatio"
              ],
              "jpcrp-cor:MajorShareholdersAxis": "ALL",
              "jpcrp-cor:MajorShareholdersAxis::default": "NONE"
            }
          },
          {
            "title": "Count Number of Shares held by major shareholders by company name/ID for Q2/2014",
            "description": "Count Number of Shares held by major shareholders by company name/ID for Q2/2014.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "xbrl:Entity": "http://disclosure.edinet-fsa.go.jp E02529-000",
              "fiscalPeriod": "Q2",
              "fiscalYear": 2014,
              "concept": [
                "jpcrp-cor:NumberOfSharesHeld",
                "jpcrp-cor:ShareholdingRatio"
              ],
              "jpcrp-cor:MajorShareholdersAxis": "ALL",
              "jpcrp-cor:MajorShareholdersAxis::default": "NONE",
              "count": "true"
            }
          },
          {
            "title": "Compare stocks of subsidiaries and affiliates between Canon and Mitsubishi",
            "description": "Compare Balance Sheet between Canon and Mitsubishi as XML.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "format": "xml",
              "concept": [
                "jp-t-cte:StocksOfSubsidiariesAndAffiliates",
                "jppfs-cor:StocksOfSubsidiariesAndAffiliates"
              ],
              "edinetcode": [
                "E02274",
                "E02529"
              ],
              "fiscalPeriod": "FY",
              "fiscalYear": "ALL",
              "jppfs-cor:ConsolidatedOrNonConsolidatedAxis": "ALL",
              "jppfs-cor:ConsolidatedOrNonConsolidatedAxis::default": "jppfs-cor:NonConsolidatedMember",
              "tse-ed-t:ConsolidatedNonconsolidatedAxis": "ALL",
              "tse-ed-t:ConsolidatedNonconsolidatedAxis::default": "NONE",
              "tse-ed-t:PreviousCurrentAxis": "ALL",
              "tse-ed-t:PreviousCurrentAxis::default": "NONE"
            }
          },
          {
            "title": "Get forecast values by company name/ID and reported period/forecast period",
            "description": "Get forecast values by company name/ID and reported period/forecast period.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "format": "xml",
              "concept": "tse-ed-t:BasicEarningsPerShareIFRS",
              "ticker": 8058,
              "tse-ed-t:ResultForecastAxis": "tse-ed-t:ForecastMember",
              "tse-ed-t:ConsolidatedNonconsolidatedAxis": "ALL",
              "tse-ed-t:ConsolidatedNonconsolidatedAxis::default": "ALL",
              "fiscalYear": 2014
            }
          },
          {
            "title": "Get all dividend forecasts for 2014 by company name/ID",
            "description": "Get all dividend forecasts for 2014 by company name/ID",
            "profile": [
              "japan"
            ],
            "parameters": {
              "xbrl:Entity": "http://www.tse.or.jp/sicc 54010",
              "fiscalYear": 2014,
              "fiscalPeriod": "ALL",
              "fiscalPeriodType": "QTD",
              "concept": "tse-ed-t:DividendPerShare",
              "tse-ed-t:ResultForecastAxis": "tse-ed-t:ForecastMember",
              "tse-ed-t:ConsolidatedNonconsolidatedAxis": "ALL",
              "tse-ed-t:AnnualDividendPaymentScheduleAxis": "ALL",
              "tse-ed-t:PreviousCurrentAxis": "ALL",
              "tse-ed-t:ConsolidatedNonconsolidatedAxis::default": "NONE",
              "tse-ed-t:AnnualDividendPaymentScheduleAxis::default": "NONE",
              "tse-ed-t:PreviousCurrentAxis::default": "NONE"
            }
          },
          {
            "title": "Get all dividend forecasts for 2014 by company name/ID reported in Q1/2014",
            "description": "Get all dividend forecasts for 2014 by company name/ID reported in Q1/2014",
            "profile": [
              "japan"
            ],
            "parameters": {
              "xbrl:Entity": "http://www.tse.or.jp/sicc 54010",
              "fiscalYear": 2014,
              "fiscalPeriod": "ALL",
              "fiscalPeriodType": "QTD",
              "concept": "tse-ed-t:DividendPerShare",
              "tse-ed-t:ResultForecastAxis": "tse-ed-t:ForecastMember",
              "tse-ed-t:ConsolidatedNonconsolidatedAxis": "ALL",
              "tse-ed-t:AnnualDividendPaymentScheduleAxis": "ALL",
              "tse-ed-t:PreviousCurrentAxis": "ALL",
              "tse-ed-t:ConsolidatedNonconsolidatedAxis::default": "NONE",
              "tse-ed-t:AnnualDividendPaymentScheduleAxis::default": "NONE",
              "tse-ed-t:PreviousCurrentAxis::default": "NONE",
              "fsa:ArchiveFiscalPeriod": "Q1",
              "fsa:ArchiveFiscalYear": 2014
            }
          },
          {
            "title": "Get all dividend data for 2014 reported by Canon. Open hypercube semantics.",
            "description": "Get all dividend data for 2014 reported by canon",
            "profile": [
              "japan"
            ],
            "parameters": {
              "ticker": 7751,
              "fiscalYear": 2014,
              "fiscalPeriod": "FY",
              "concept": "tse-ed-t:DividendPerShare",
              "open": "true"
            }
          },
          {
            "title": "Get all Profit forecasts for FY/2014 by company name/ID",
            "description": "Get all Profit forecasts for FY/2014 by company name/ID",
            "profile": [
              "japan"
            ],
            "parameters": {
              "xbrl:Entity": "http://www.tse.or.jp/sicc 80580",
              "fiscalYear": 2014,
              "fiscalPeriod": "FY",
              "concept": "tse-ed-t:ProfitAttributableToOwnersOfParentIFRS",
              "tse-ed-t:ResultForecastAxis": "tse-ed-t:ForecastMember",
              "tse-ed-t:ConsolidatedNonconsolidatedAxis": "ALL",
              "tse-ed-t:PreviousCurrentAxis": "ALL",
              "tse-ed-t:ConsolidatedNonconsolidatedAxis::default": "NONE",
              "tse-ed-t:PreviousCurrentAxis::default": "NONE"
            }
          },
          {
            "title": "Get all Profit forecasts and actual values for FY/2014 by company name/ID",
            "description": "Get all Profit forecasts and actual values for FY/2014 by company name/ID",
            "profile": [
              "japan"
            ],
            "parameters": {
              "xbrl:Entity": "http://www.tse.or.jp/sicc 80580",
              "fiscalYear": 2014,
              "fiscalPeriod": "FY",
              "concept": "tse-ed-t:ProfitAttributableToOwnersOfParentIFRS",
              "tse-ed-t:ResultForecastAxis": [
                "tse-ed-t:ForecastMember",
                "xbrl28:EDINETReportedValue"
              ],
              "tse-ed-t:ResultForecastAxis::default": "xbrl28:EDINETReportedValue",
              "tse-ed-t:ConsolidatedNonconsolidatedAxis": "ALL",
              "tse-ed-t:PreviousCurrentAxis": "ALL",
              "tse-ed-t:ConsolidatedNonconsolidatedAxis::default": "NONE",
              "tse-ed-t:PreviousCurrentAxis::default": "NONE",
              "fsa:ArchiveFiscalPeriod": "ALL",
              "fsa:ArchiveFiscalYear": "ALL"
            }
          }
        ]
      },
      "post": {
        "summary": "Add a fact to a archive.",
        "operationId": "addFacts",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "name": "fact",
            "in": "body",
            "description": "The fact objects (they must be valid, and have an archive aspect that points to an existing archive). To logically delete a fact, omit the Value field.",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the fact objects that has been added to the cell store.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "One of the supplied facts is invalid.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Access denied",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such archive or entity could be found.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": []
      },
      "patch": {
        "summary": "Patch one or more facts",
        "operationId": "editFacts",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "$ref": "#/parameters/aid"
          },
          {
            "$ref": "#/parameters/concept"
          },
          {
            "$ref": "#/parameters/fiscalYear"
          },
          {
            "$ref": "#/parameters/fiscalPeriod"
          },
          {
            "$ref": "#/parameters/fiscalPeriodType"
          },
          {
            "$ref": "#/parameters/archiveFiscalYear"
          },
          {
            "$ref": "#/parameters/archiveFiscalPeriod"
          },
          {
            "$ref": "#/parameters/map"
          },
          {
            "$ref": "#/parameters/rule"
          },
          {
            "$ref": "#/parameters/report"
          },
          {
            "$ref": "#/parameters/additional-rules"
          },
          {
            "$ref": "#/parameters/open"
          },
          {
            "$ref": "#/parameters/prefix:dimension"
          },
          {
            "$ref": "#/parameters/prefix:dimension::type"
          },
          {
            "$ref": "#/parameters/prefix:dimension::default"
          },
          {
            "$ref": "#/parameters/prefix:dimension::category"
          },
          {
            "$ref": "#/parameters/prefix:dimension::visible"
          },
          {
            "$ref": "#/parameters/prefix:dimension::slicer"
          },
          {
            "$ref": "#/parameters/prefix:dimension::column"
          },
          {
            "$ref": "#/parameters/prefix:dimension::aggregation"
          },
          {
            "$ref": "#/parameters/aggregation-function"
          },
          {
            "$ref": "#/parameters/validate_facts"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "patch",
            "in": "body",
            "description": "The patch object, which will be merged into each facts (the facts must be valid after applying it).",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the patched facts",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request: a parameter is missing or invalid, or a fact is invalid after applying the patch",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Access denied",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity could be found. / No such archive could be found",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        }
      }
    },
    "/api/facttable-for-component": {
      "get": {
        "summary": "Retrieve the fact table for a given component. A component can be selected in several ways, for example with an accession number (AID), section URI and hypercube name, or with a CIK, fiscal year, fiscal period, and disclosure, etc.",
        "operationId": "getFactTableForComponent",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format_atom"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/section"
          },
          {
            "$ref": "#/parameters/hypercube"
          },
          {
            "$ref": "#/parameters/concept"
          },
          {
            "$ref": "#/parameters/fiscalYear"
          },
          {
            "$ref": "#/parameters/fiscalPeriod"
          },
          {
            "$ref": "#/parameters/fiscalPeriodType"
          },
          {
            "$ref": "#/parameters/archiveFiscalYear_ALL"
          },
          {
            "$ref": "#/parameters/archiveFiscalPeriod_ALL"
          },
          {
            "$ref": "#/parameters/additional-rules"
          },
          {
            "$ref": "#/parameters/labels"
          },
          {
            "$ref": "#/parameters/metadata"
          },
          {
            "$ref": "#/parameters/audit-trails"
          },
          {
            "$ref": "#/parameters/open"
          },
          {
            "$ref": "#/parameters/prefix:dimension"
          },
          {
            "$ref": "#/parameters/prefix:dimension::category"
          },
          {
            "$ref": "#/parameters/prefix:dimension::visible"
          },
          {
            "$ref": "#/parameters/prefix:dimension::slicer"
          },
          {
            "$ref": "#/parameters/archive-tag"
          },
          {
            "$ref": "#/parameters/disclosure"
          },
          {
            "$ref": "#/parameters/reportElement"
          },
          {
            "$ref": "#/parameters/label_component"
          },
          {
            "$ref": "#/parameters/aggregation-function"
          },
          {
            "$ref": "#/parameters/validate_facts"
          },
          {
            "$ref": "#/parameters/merge"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/override"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the fact table for the given component",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity could be found. / No such archive could be found. / No such component could be found",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Fact Table as CSV",
            "description": "Retrieve the fact table for a particular component. Return the result as CSV",
            "profile": [
              "sec"
            ],
            "parameters": {
              "aid": "0000021344-14-000008",
              "section": "http://www.thecocacolacompany.com/role/ConsolidatedBalanceSheets",
              "format": "csv"
            }
          },
          {
            "title": "Fact Table of Coca Cola's Q3/2013 Balance Sheet",
            "description": "Retrieve the fact table for the Balance Sheet of Coca Cola archive identified with accession number 0000021344-13-000050. Return the result as XML",
            "profile": [
              "sec"
            ],
            "parameters": {
              "format": "xml",
              "aid": "0000021344-13-000050",
              "disclosure": "BalanceSheet"
            }
          },
          {
            "title": "Fact Table as CSV",
            "description": "Retrieve the fact table for a particular component. Return the result as CSV",
            "profile": [
              "sec"
            ],
            "parameters": {
              "aid": "0000021344-14-000008",
              "section": "http://www.thecocacolacompany.com/role/ConsolidatedBalanceSheets",
              "format": "csv"
            }
          },
          {
            "title": "Fact Table of Coca Cola's Q3/2013 Balance Sheet",
            "description": "Retrieve the fact table for the Balance Sheet of Coca Cola archive identified with accession number 0000021344-13-000050. Return the result as XML",
            "profile": [
              "sec"
            ],
            "parameters": {
              "format": "xml",
              "aid": "0000021344-13-000050",
              "disclosure": "BalanceSheet"
            }
          },
          {
            "title": "Get B/S report by company name/ID and period (by default in English)",
            "description": "Get B/S report by company name/ID and period (by default in English)",
            "profile": [
              "japan"
            ],
            "parameters": {
              "eid": "http://info.edinet-fsa.go.jp E01225-000",
              "archiveFiscalYear": "2014",
              "archiveFiscalPeriod": "Q1",
              "section": "http://disclosure.edinet-fsa.go.jp/role/jppfs/rol_QuarterlyConsolidatedBalanceSheet",
              "profile-name": "japan",
              "merge": "true",
              "labels": "true",
              "format": "xml"
            }
          },
          {
            "title": "Get B/S report by company name/ID and period, in Japanese",
            "description": "Get B/S report by company name/ID and period, in Japanese",
            "profile": [
              "japan"
            ],
            "parameters": {
              "eid": "http://info.edinet-fsa.go.jp E01225-000",
              "archiveFiscalYear": "2014",
              "archiveFiscalPeriod": "Q1",
              "section": "http://disclosure.edinet-fsa.go.jp/role/jppfs/rol_QuarterlyConsolidatedBalanceSheet",
              "profile-name": "japan",
              "merge": "true",
              "labels": "true",
              "language": "ja",
              "format": "xml"
            }
          },
          {
            "title": "Get P/L report by company name/ID and period",
            "description": "Get B/S report by company name/ID and period",
            "profile": [
              "japan"
            ],
            "parameters": {
              "eid": "http://info.edinet-fsa.go.jp E01225-000",
              "archiveFiscalYear": "2014",
              "archiveFiscalPeriod": "Q1",
              "section": "http://disclosure.edinet-fsa.go.jp/role/jppfs/rol_YearToQuarterEndConsolidatedStatementOfIncome",
              "profile-name": "japan",
              "merge": "true",
              "labels": "true",
              "format": "xml"
            }
          },
          {
            "title": "Get C/F report by company name/ID and period",
            "description": "Get C/F report by company name/ID and period",
            "profile": [
              "japan"
            ],
            "parameters": {
              "eid": "http://info.edinet-fsa.go.jp E01225-000",
              "archiveFiscalYear": "2014",
              "archiveFiscalPeriod": "Q1",
              "section": "http://disclosure.edinet-fsa.go.jp/role/jpcrp/rol_NotesQuarterlyConsolidatedStatementOfCashFlows",
              "profile-name": "japan",
              "merge": "true",
              "labels": "true",
              "format": "xml"
            }
          },
          {
            "title": "Get B/S report for multiple FYs by company name/ID and range of period",
            "description": "Get B/S report for multiple FYs by company name/ID and range of period",
            "profile": [
              "japan"
            ],
            "parameters": {
              "eid": "http://info.edinet-fsa.go.jp E01225-000",
              "archiveFiscalYear": "2014",
              "archiveFiscalPeriod": [
                "Q1",
                "Q2"
              ],
              "section": "http://disclosure.edinet-fsa.go.jp/role/jppfs/rol_QuarterlyConsolidatedBalanceSheet",
              "profile-name": "japan",
              "merge": "true",
              "labels": "true",
              "format": "xml"
            }
          },
          {
            "title": "Get P/L report for multiple FYs by company name/ID and range of period",
            "description": "Get P/L report for multiple FYs by company name/ID and range of period",
            "profile": [
              "japan"
            ],
            "parameters": {
              "eid": "http://info.edinet-fsa.go.jp E01225-000",
              "archiveFiscalYear": "2014",
              "archiveFiscalPeriod": [
                "Q1",
                "Q2"
              ],
              "section": "http://disclosure.edinet-fsa.go.jp/role/jppfs/rol_YearToQuarterEndConsolidatedStatementOfIncome",
              "profile-name": "japan",
              "merge": "true",
              "labels": "true",
              "format": "xml"
            }
          },
          {
            "title": "Get C/S report for multiple FYs by company name/ID and range of period",
            "description": "Get C/S report for multiple FYs by company name/ID and range of period",
            "profile": [
              "japan"
            ],
            "parameters": {
              "eid": "http://info.edinet-fsa.go.jp E01225-000",
              "archiveFiscalYear": "2014",
              "archiveFiscalPeriod": [
                "Q1",
                "Q2"
              ],
              "section": "http://disclosure.edinet-fsa.go.jp/role/jpcrp/rol_NotesQuarterlyConsolidatedStatementOfCashFlows",
              "profile-name": "japan",
              "merge": "true",
              "labels": "true",
              "format": "xml"
            }
          },
          {
            "title": "Get B/S report of different companies by list of company names/IDs and period",
            "description": "Get B/S report of different companies by list of company names/IDs and period",
            "profile": [
              "japan"
            ],
            "parameters": {
              "entity-tag": "NIKKEI",
              "archiveFiscalYear": "2014",
              "archiveFiscalPeriod": "Q1",
              "section": "http://disclosure.edinet-fsa.go.jp/role/jppfs/rol_QuarterlyConsolidatedBalanceSheet",
              "profile-name": "japan",
              "merge": "true",
              "labels": "true",
              "format": "xml"
            }
          },
          {
            "title": "Get P/L report of different companies by list of company names/IDs and period",
            "description": "Get P/L report of different companies by list of company names/IDs and period",
            "profile": [
              "japan"
            ],
            "parameters": {
              "entity-tag": "NIKKEI",
              "archiveFiscalYear": "2014",
              "archiveFiscalPeriod": "Q1",
              "section": "http://disclosure.edinet-fsa.go.jp/role/jppfs/rol_YearToQuarterEndConsolidatedStatementOfIncome",
              "profile-name": "japan",
              "merge": "true",
              "labels": "true",
              "format": "xml"
            }
          },
          {
            "title": "Get C/S report of different companies by list of company names/IDs and period",
            "description": "Get C/S report of different companies by list of company names/IDs and period",
            "profile": [
              "japan"
            ],
            "parameters": {
              "entity-tag": "NIKKEI",
              "archiveFiscalYear": "2014",
              "archiveFiscalPeriod": "Q1",
              "section": "http://disclosure.edinet-fsa.go.jp/role/jpcrp/rol_NotesQuarterlyConsolidatedStatementOfCashFlows",
              "profile-name": "japan",
              "merge": "true",
              "labels": "true",
              "format": "xml"
            }
          }
        ]
      }
    },
    "/api/facttable-for-report": {
      "get": {
        "summary": "Retrieve the fact table for a given report. Filters can be overriden. Filters MUST be overriden if the report is not already filtering.",
        "operationId": "getFactTableForReport",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format_atom"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/concept"
          },
          {
            "$ref": "#/parameters/fiscalYear"
          },
          {
            "$ref": "#/parameters/fiscalPeriod"
          },
          {
            "$ref": "#/parameters/fiscalPeriodType"
          },
          {
            "$ref": "#/parameters/archiveFiscalYear_ALL"
          },
          {
            "$ref": "#/parameters/archiveFiscalPeriod_ALL"
          },
          {
            "$ref": "#/parameters/open"
          },
          {
            "$ref": "#/parameters/report"
          },
          {
            "$ref": "#/parameters/labels"
          },
          {
            "$ref": "#/parameters/metadata"
          },
          {
            "$ref": "#/parameters/audit-trails"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/aggregation-function"
          },
          {
            "$ref": "#/parameters/validate_facts"
          },
          {
            "$ref": "#/parameters/override"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the fact table for the given component",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity could be found. / No such archive could be found",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Fact Table for the Fundamental Accounting Concepts of COCA COLA's 2010..2013 10-K archives as CSV.",
            "description": "Retrieve the fact table for a particular component. Return the result as CSV.",
            "profile": [
              "sec"
            ],
            "parameters": {
              "report": "FundamentalAccountingConcepts",
              "ticker": "ko",
              "fiscalYear": [
                "2013",
                "2012",
                "2011",
                "2010"
              ],
              "fiscalPeriod": "FY",
              "format": "csv"
            }
          },
          {
            "title": "Fact Table for the Fundamental Accounting Concepts of EAST JAPAN RAILWAY COMPANY for Q1 2014",
            "description": "Retrieve the fact table for a particular report. Return the result as XML.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "report": "JapaneseFundamentalAccountingConcepts",
              "edinetcode": "E04147",
              "fiscalYear": [
                "2014"
              ],
              "fiscalPeriod": "Q1",
              "format": "xml"
            }
          }
        ]
      }
    },
    "/api/data-points-for-component": {
      "get": {
        "summary": "Retrieve the data points for a given component. A component can be selected in several ways, for example with an accession number (AID), section URI and hypercube name, or with a CIK, fiscal year, fiscal period, and disclosure, etc.",
        "operationId": "getDataPointsForComponent",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/section"
          },
          {
            "$ref": "#/parameters/hypercube"
          },
          {
            "$ref": "#/parameters/concept"
          },
          {
            "$ref": "#/parameters/fiscalYear"
          },
          {
            "$ref": "#/parameters/fiscalPeriod"
          },
          {
            "$ref": "#/parameters/fiscalPeriodType"
          },
          {
            "$ref": "#/parameters/archiveFiscalYear_ALL"
          },
          {
            "$ref": "#/parameters/archiveFiscalPeriod_ALL"
          },
          {
            "$ref": "#/parameters/labels"
          },
          {
            "$ref": "#/parameters/metadata"
          },
          {
            "$ref": "#/parameters/open"
          },
          {
            "$ref": "#/parameters/prefix:dimension"
          },
          {
            "$ref": "#/parameters/prefix:dimension::category"
          },
          {
            "$ref": "#/parameters/prefix:dimension::visible"
          },
          {
            "$ref": "#/parameters/prefix:dimension::slicer"
          },
          {
            "$ref": "#/parameters/archive-tag"
          },
          {
            "$ref": "#/parameters/disclosure"
          },
          {
            "$ref": "#/parameters/reportElement"
          },
          {
            "$ref": "#/parameters/label_component"
          },
          {
            "$ref": "#/parameters/merge"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/override"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the data points for the given component",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity could be found. / No such archive could be found. / No such component could be found",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Data Points as CSV",
            "description": "Retrieve the data points for a particular component. Return the result as CSV",
            "profile": [
              "sec"
            ],
            "parameters": {
              "aid": "0000021344-14-000008",
              "section": "http://www.thecocacolacompany.com/role/ConsolidatedBalanceSheets",
              "format": "csv",
              "labels": true
            }
          },
          {
            "title": "Data Points of Coca Cola's Q3/2013 Balance Sheet",
            "description": "Retrieve the data points for the Balance Sheet of Coca Cola archive identified with accession number 0000021344-13-000050. Return the result as XML",
            "profile": [
              "sec"
            ],
            "parameters": {
              "format": "xml",
              "aid": "0000021344-13-000050",
              "disclosure": "BalanceSheet",
              "labels": true,
              "metadata": true
            }
          }
        ]
      }
    },
    "/api/archives": {
      "get": {
        "summary": "Retrieve metadata about the archives, also called archives. The archives are identified with Archive IDs (AIDs). Facts can be bound with archives with the xbrl28:Archive aspect, whose values are AIDs.",
        "operationId": "getArchives",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/archiveFiscalYear_ALL"
          },
          {
            "$ref": "#/parameters/archiveFiscalPeriod_ALL"
          },
          {
            "$ref": "#/parameters/archive-tag"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all archives for the given entity",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity could be found",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Get all archives from a specific entity.",
            "description": "Retrieve information about the archives of an entity. Return the result as XML.",
            "profile": [
              "sec"
            ],
            "parameters": {
              "cik": "66740",
              "format": "xml"
            }
          },
          {
            "title": "Get all EDINET archives.",
            "description": "Retrieve all EDINET archives for 2012.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "entity-tag": "all",
              "archive-tag": "EDINET",
              "archiveFiscalPeriod": "ALL",
              "archiveFiscalYear": 2012
            }
          }
        ]
      },
      "post": {
        "summary": "Add or update archives. The archives are identified with Archive IDs (AIDs).\n\nThere are two ways to create an archive: a full import of an XBRL instance and taxonomy out of a ZIP file, or a new empty archive with a JSON object containing its metadata.\n\nA full import is performed by provided, in the body of the request, a ZIP Deflate-compressed archive. This will import all the facts from the instance, as well as the taxonomy schema and linkbases.\n\nAlternatively, a new empty archive can be created by submitting a JSON object containing general information about the archive. This JSON object must be valid agains a JSound schema. It can be either taken from the output of a GET request to the same endpoint (in which case it will be valid), or created manually.\n\nFor convenience, we offer a user-friendly summary of the fields involved. The JSound schema is available on request.\n\n#### Body properties\n\n| Field | Type | Presence | Content |\n|-------|------|----------|---------|\n| AID | string | required | The AID of the archive |\n| Entity   | string | optional | The EID to which the archive belongs |\n| Entities  | array of strings (at least one) | required if Entity is absent | Used if the archive reports information on more than one entity. |\n| InstanceURL  | string | optional | The URL of the original XBRL instance |\n| Namespaces  | object with string values | optional | Maps prefixes to namespaces for the archive (common bindings are automatically added) |\n| Profiles | object | optional | Maps profile names to additional profile-specific information. The profile-specific information must have a Name field containing the profile name, that is, identical to its key. The other fields in the profile information is not restricted. |\n\nAdditionally, the following fields are allowed for the purpose of feeding back the output of the archives endpoint as input:\n\n- Components (string)\n- Sections (string)\n- NumSections (integer)\n- NumFacts (integer)\n- NumFootnotes (integer)\n- NumReportElements (integer)\n- NumHypercubes (integer)\n- NumDimensions (integer)\n- NumMembers (integer)\n- NumLineItems (integer)\n- NumAbstracts (integer)\n- NumConcepts (integer)\n\nSeveral empty archives can be created at the same time by posting a sequence of non-comma-separated JSON objects as above.\n",
        "operationId": "addArchives",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid_SINGLE"
          },
          {
            "name": "archive-detection-profile-name",
            "in": "query",
            "description": "this parameter can be used to override the algorithm used to identify which files are the archive entrypoint. Allowed values are: AUTO (automatic detection) and FSA (automatic detection, with identification of Audit and Public documents).",
            "required": false,
            "type": "string",
            "enum": [
              "AUTO",
              "FSA"
            ],
            "default": "AUTO"
          },
          {
            "name": "taxonomy",
            "in": "query",
            "description": "Whether the specified archive is an XBRL taxonomy or not. (Only used when providing compressed XBRL archives)",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "insert-entity",
            "in": "query",
            "description": "If false, and one or more of the archive entities are not present in the repository an error is raised. If true, the missing entity is inserted. (Default is true, only used when providing compressed XBRL archives)",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of the request, as an HTTP header. It must be set to \"application/json\" when providing an archive in json format, or to \"application/xbrlx\" when providing a ZIP Deflate-compressed XBRL archive.",
            "required": false,
            "type": "string",
            "enum": [
              "application/json",
              "application/xbrlx"
            ]
          },
          {
            "name": "archive",
            "in": "body",
            "description": "The body of the request. If the content type is application/json, the archive JSON objects, which must satisfy the constraints described in the field table. If the content type is application/xbrlx, a single ZIP-Deflate-compressed XBRL archive.",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Archives have been added.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "One of the supplied archives is invalid or (if JSON) already exists.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity could be found.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "409": {
            "description": "Duplicate archive in the input or archive already exists.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Import an XBRL instance",
            "description": "Imports a ZIP-Deflate-compressed XBRL archive",
            "method": "post",
            "body": "[ZIP-Deflate-compressed XBRL archive]"
          },
          {
            "title": "Create a new archive",
            "description": "Create a new archive from scratch",
            "method": "post",
            "body": "{ \"AID\" : \"my-archive\", \"Entity\" : \"http://www.example.com 001\" }"
          }
        ]
      },
      "delete": {
        "summary": "Deletes an archive.",
        "operationId": "deleteArchive",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid_SINGLE"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/archiveFiscalYear_ALL"
          },
          {
            "$ref": "#/parameters/archiveFiscalPeriod_ALL"
          },
          {
            "$ref": "#/parameters/archive-tag"
          }
        ],
        "responses": {
          "204": {
            "description": "Archives have been deleted.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Cannot delete more than one archive at a time (safety mechanism).",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity or archive could be found.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": null
      },
      "patch": {
        "summary": "Update one or more archives with partial information",
        "operationId": "editArchives",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "$ref": "#/parameters/archiveFiscalYear_ALL"
          },
          {
            "$ref": "#/parameters/archiveFiscalPeriod_ALL"
          },
          {
            "$ref": "#/parameters/archive-tag"
          },
          {
            "name": "patch",
            "in": "body",
            "description": "The patch object, which will be merged into each archive (the archive objects must be valid after applying it).\n\nUpdating the AID of an archive is not allowed.\n",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the patched archives",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request: a parameter is missing or invalid, or an archive is invalid after applying the patch, or an AID was updated",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Access denied",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such archive could be found.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        }
      }
    },
    "/api/labels": {
      "get": {
        "summary": "Retrieve labels for the supplied components and report elements",
        "operationId": "getLabels",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/archiveFiscalYear_ALL"
          },
          {
            "$ref": "#/parameters/archiveFiscalPeriod_ALL"
          },
          {
            "$ref": "#/parameters/archive-tag"
          },
          {
            "$ref": "#/parameters/section"
          },
          {
            "$ref": "#/parameters/hypercube_SINGLE"
          },
          {
            "$ref": "#/parameters/disclosure"
          },
          {
            "$ref": "#/parameters/reportElement"
          },
          {
            "$ref": "#/parameters/label_component"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/labelRole"
          },
          {
            "$ref": "#/parameters/onlyTextBlocks"
          },
          {
            "name": "kind",
            "in": "query",
            "description": "Filters by concept kind (default: no filtering)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "Hypercube",
              "Dimension",
              "Member",
              "LineItems",
              "Abstract",
              "Concept"
            ]
          },
          {
            "name": "eliminateReportElementDuplicates",
            "in": "query",
            "description": "Whether to eliminate (concept name, language, label role) duplicates. By default no duplicate elimination",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all components for the given archive",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity could be found. / No such archive could be found. / No such component could be found",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Retrieve information about all Japanese labels of a archive",
            "description": "Retrieves, in XML, all Japanese standard labels for a archive.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "aid": "S1003QRF",
              "language": "ja",
              "labelRole": "http://www.xbrl.org/2003/role/label",
              "format": "xml"
            }
          },
          {
            "title": "Get label of standard taxonomy by element name, as XML.",
            "description": "Get label of standard taxonomy by element name.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "aid": "EDINET-TAXONOMY-2014-03-31",
              "format": "xml",
              "profile-name": "japan",
              "reportElement": "jppfs-cor:CurrentAssets"
            }
          },
          {
            "title": "Get element name of standard taxonomy by label, as XML.",
            "description": "Get element name of standard taxonomy by label.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "aid": "EDINET-TAXONOMY-2014-03-31",
              "format": "xml",
              "profile-name": "japan",
              "label": "Accounting policy for deferred assets"
            }
          }
        ]
      },
      "post": {
        "summary": "Add or update labels. A label is identified with an Archive ID (AID),\na section URI, a report element, a language and a label role.\n\nA label can be created by submitting a JSON object containing general\ninformation about the label. This JSON object must be valid against a\nJSound schema. It can be either taken from the output of a GET request\nto the same endpoint (in which case it will be valid), or created\nmanually.\n\nFor convenience, we offer a user-friendly summary of the fields\ninvolved. The JSound schema is available on request.\n\n#### Body properties\n\n| Field         | Type   | Presence | Content                          |\n|---------------|--------|----------|----------------------------------|\n| AID           | string | required | The AID of the archive to which the section belongs |\n| SectionURI    | string | required | The URI of the section           |\n| ReportElement | string | required | The name of a report element     |\n| Language      | string | required | A language code, e.g., en-US or de |\n| Role          | string | required | A label role                     |\n| Value         | string | required | The label itself                 |\n\nSeveral labels can be created at the same time by posting a sequence of\nnon-comma-separated JSON objects as above.\n",
        "operationId": "addLabels",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "name": "label",
            "in": "body",
            "description": "The label objects (they must be valid).",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Labels have been added.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "One of the supplied labels is invalid or (if JSON) already exists.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such archive or section or report element could be found.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "409": {
            "description": "One of the supplied labels already exists.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": null
      },
      "delete": {
        "summary": "Deletes a label.",
        "operationId": "deleteLabel",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid_SINGLE"
          },
          {
            "$ref": "#/parameters/section_SINGLE"
          },
          {
            "$ref": "#/parameters/reportElement_SINGLE"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/labelRole"
          }
        ],
        "responses": {
          "204": {
            "description": "The label has been deleted.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Cannot delete more than one label at a time (safety mechanism).",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such archive or section or report element or label could be found.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": null
      }
    },
    "/api/modelstructure-for-component": {
      "get": {
        "summary": "Retrieve the model structure for a given component. A component can be selected in several ways, for example with an accession number (AID), section URI and hypercube name, or with a CIK, fiscal year, fiscal period, and disclosure, etc.",
        "operationId": "getModelStructureForComponent",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/archiveFiscalYear_ALL"
          },
          {
            "$ref": "#/parameters/archiveFiscalPeriod_ALL"
          },
          {
            "$ref": "#/parameters/archive-tag"
          },
          {
            "$ref": "#/parameters/section"
          },
          {
            "$ref": "#/parameters/hypercube"
          },
          {
            "$ref": "#/parameters/disclosure"
          },
          {
            "$ref": "#/parameters/reportElement"
          },
          {
            "$ref": "#/parameters/label_component"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/indent"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the model structure for the given component",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity could be found. / No such archive could be found. / No such component could be found",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Model Structure as XML",
            "description": "Retrieve the model structure for a particular component. Return the result as XML.",
            "profile": [
              "sec"
            ],
            "parameters": {
              "aid": "0000021344-14-000008",
              "section": "http://www.thecocacolacompany.com/role/ConsolidatedBalanceSheets",
              "format": "xml"
            }
          },
          {
            "title": "Model Structure of Coca Cola's Q3/2013 Balance Sheet",
            "description": "Retrieve the model structure for a the Balance Sheet of Coca Cola archive identified with accession number 0000021344-13-000050. Return the result as XML.",
            "profile": [
              "sec"
            ],
            "parameters": {
              "format": "xml",
              "aid": "0000021344-13-000050",
              "disclosure": "BalanceSheet"
            }
          }
        ]
      },
      "post": {
        "summary": "Add or update components by providing their model structures. The components are identified with an AID, a section URI and the qualified name of a hypercube.\n\nA new component can be created by submitting a JSON object containing the model structure of the component. This JSON object must be valid agains a JSound schema. It can be either taken from the output of a GET request to the same endpoint (in which case it will be valid), or created manually.\n\nFor convenience, we offer a user-friendly summary of the fields involved. The JSound schema is available on request.\n\n#### Body properties\n\n| Field | Type | Presence | Content |\n|-------|------|----------|---------|\n| AID | string | required | The AID of the archive to which the component belongs |\n| SectionURI   | string (URI) | optional | The URI of the section to which the component belongs |\n| HypercubeName  | string (QName lexical space) | required | The name of the hypercube that this component involves |\n| ModelStructure  | array of model structure node objects | required | The hierarchical model structure, as a tree of nodes that reference report elements (see below) |\n\nAdditionally, the following fields are allowed for the purpose of feeding back the output of the modelstructure-for-component endpoint as input:\n\n- Section (string)\n- Hypercube (string)\n\n#### Model structure node properties\n\n| Field | Type | Presence | Content |\n|-------|------|----------|---------|\n| Name | string | required | The qualified name of a report element that exists in the component's section |\n| Children   | array | optional | An array of model structure node objects that reference further children report elements |\n\nAdditionally, the following fields are allowed for the purpose of feeding back the output of the modelstructure-for-component endpoint as input:\n\n- Depth (integer)\n- Label (string)\n- BaseType (string)\n- Kind (string)\n- Order (integer)\n- DataType (string)\n- BaseDataType (string)\n- Balance (string)\n- Abstract (boolean)\n- PeriodType (string)\n\nThe hierarchy of the model structure must fulfill the constraints described in the documentation of model structures. We repeat it here for convenience:\n\n| Kind of report element |  Allowed children                           |\n|------------------------|---------------------------------------------|\n| Abstract               | Hypercube (if top-level), Abstract, Concept |\n| Hypercube              | Dimension, LineItems                        |\n| Dimension              | Member                                      |\n| Member                 | Member                                      |\n| LineItems              | Abstract, Concept                           |\n| Concept                | none                                        |\n\nThe model structure MUST involve the hypercube referred to in the top-level HypercubeName field, only this one, and only once, either top-level or below a top-level abstract. Its children are the dimensions with their members, as well as the line items hierarchy.\n\nThe only exception to the requirement of the hypercube report element is the special xbrl28:ImpliedTable hypercube. If HypercubeName is xbrl28:ImpliedTable, then the model structure can only involve Abstracts and Concepts, and has no dimensionality.\n\nSeveral components can be created at the same time by posting a sequence of non-comma-separated JSON model structure objects as above.\n",
        "operationId": "addModelStructureForComponent",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "name": "model-structure",
            "in": "body",
            "description": "The model structures, which must satisfy the constraints described in the properties table.",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Components have been added.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "One of the supplied model structures is invalid. Or one of the components is a duplicate in the body. Or the supplied HypercubeName is not a hypercube.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such archive or section or report element could be found.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "409": {
            "description": "The component with the specified archive, section and hypercube already exists.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": null
      },
      "delete": {
        "summary": "Deletes a component including its model structure.",
        "operationId": "deleteModelStructureForComponent",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/aid"
          },
          {
            "$ref": "#/parameters/section"
          },
          {
            "$ref": "#/parameters/hypercube"
          },
          {
            "$ref": "#/parameters/token"
          }
        ],
        "responses": {
          "204": {
            "description": "The report element has been deleted.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Cannot delete more than one component at a time (safety mechanism).",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such archive or section or component could be found.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": null
      }
    },
    "/api/periods": {
      "get": {
        "summary": "Retrieve the periods of the archives filed by a particular entity",
        "operationId": "getPeriods",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/archiveFiscalYear_ALL"
          },
          {
            "$ref": "#/parameters/archiveFiscalPeriod_ALL"
          },
          {
            "$ref": "#/parameters/archive-tag"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all periods of the archives filed by the given entity",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity could be found. / No such archive could be found",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Get list of all periods",
            "description": "Get list of all periods.",
            "parameters": {
              "entity-tag": "ALL"
            }
          },
          {
            "title": "Retrieve the periods of the archives filed by a specific entity",
            "description": "Retrieve information about the periods of the archives filed by an entity identified by its CIK. Return the result as XML.",
            "profile": [
              "sec"
            ],
            "parameters": {
              "cik": "66740",
              "format": "xml"
            }
          },
          {
            "title": "Retrieve the periods of the archives filed for specific years for all entities",
            "description": "Retrieve the periods of the archives filed for specific years for all entities",
            "profile": [
              "japan"
            ],
            "parameters": {
              "archiveFiscalYear": [
                2013,
                2014
              ],
              "entity-tag": "ALL"
            }
          },
          {
            "title": "Retrieve all Q1 and Q2 periods of the archives filed for all entities",
            "description": "Retrieve all Q1 and Q2 periods of the archives filed for all entities",
            "profile": [
              "japan"
            ],
            "parameters": {
              "archiveFiscalPeriod": [
                "Q1",
                "Q2"
              ],
              "entity-tag": "ALL"
            }
          }
        ]
      }
    },
    "/api/report-elements": {
      "get": {
        "summary": "Retrieve the report elements contained in a set of archives.",
        "operationId": "getReportElements",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/archiveFiscalYear_ALL"
          },
          {
            "$ref": "#/parameters/archiveFiscalPeriod_ALL"
          },
          {
            "$ref": "#/parameters/archive-tag"
          },
          {
            "$ref": "#/parameters/section"
          },
          {
            "$ref": "#/parameters/hypercube_SINGLE"
          },
          {
            "$ref": "#/parameters/disclosure"
          },
          {
            "$ref": "#/parameters/reportElement"
          },
          {
            "$ref": "#/parameters/builtin"
          },
          {
            "name": "onlyNames",
            "in": "query",
            "description": "Whether only the names of the report elements should be returned. If so, the values don't contain duplicates. (default: false)",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "[Deprecated] The name of the report element to return (e.g. us-gaap:Assets)",
            "x-exclude-from-bindings": true,
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "x-deprecated": true
          },
          {
            "$ref": "#/parameters/report"
          },
          {
            "name": "label",
            "in": "query",
            "description": "A search term to search in the labels of report elements (e.g. stock)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "onlyTextBlocks",
            "in": "query",
            "description": "Filters by text block/not text block (default: no filtering)",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "abstract",
            "in": "query",
            "description": "[Deprecated] Filters by abstract/not abstract (default: no filtering)",
            "x-exclude-from-bindings": true,
            "required": false,
            "type": "boolean",
            "x-deprecated": true
          },
          {
            "name": "kind",
            "in": "query",
            "description": "Filters by concept kind (default: no filtering)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "enum": [
              "Hypercube",
              "Dimension",
              "Member",
              "LineItems",
              "Abstract",
              "Concept"
            ]
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of the request",
            "required": false,
            "type": "string",
            "enum": [
              "application/x-www-form-urlencoded"
            ]
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all names of the report elements in the selected archives",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity could be found. / No such archive could be found. / No such component could be found",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Retrieve the the names of all report elements of COCA COLA's latest FY archive",
            "description": "Retrieve a set of names of report elements of COCA COLA's latest FY archive.  Return the result as CSV.",
            "profile": [
              "sec"
            ],
            "parameters": {
              "ticker": "ko",
              "onlyName": "true",
              "format": "csv"
            }
          },
          {
            "title": "Get report element of standard taxonomy by label, as XML.",
            "description": "Get element name of standard taxonomy by label.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "aid": "EDINET-TAXONOMY-2014-03-31",
              "format": "xml",
              "profile-name": "japan",
              "label": "Accounting policy for deferred assets"
            }
          },
          {
            "title": "Get all non-abstract standard report elements.",
            "description": "Get all non-abstract standard report elements.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "aid": "EDINET-TAXONOMY-2014-03-31",
              "format": "xml",
              "profile-name": "japan",
              "kind": "Concept"
            }
          },
          {
            "title": "Get element name of specified company's taxonomy by label and company ID",
            "description": "Get element name of specified company's taxonomy by label and company ID.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "edinetcode": "E01225",
              "format": "json",
              "profile-name": "japan",
              "label": "Loss of inactive facilities"
            }
          },
          {
            "title": "Get metadata of a report element of standard taxonomy by name, as XML.",
            "description": "Get metadata of standard taxonomy by element name.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "aid": "EDINET-TAXONOMY-2014-03-31",
              "profile-name": "japan",
              "name": "jppfs-cor:CurrentAssets",
              "format": "xml"
            }
          },
          {
            "title": "Get label of specified company's taxonomy by element name and company ID",
            "description": "Get label of specified company's taxonomy by element name and company ID.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "edinetcode": "E01225",
              "name": "jpcrp-cor:NotesConsolidatedStatementOfCashFlowsHeading"
            }
          }
        ]
      },
      "post": {
        "summary": "Add or update report elements. The report elements are identified with an AID, a section URI and a qualified name.\n\nA new report element can be created by submitting a JSON object containing general information about the report element. This JSON object must be valid agains a JSound schema. It can be either taken from the output of a GET request to the same endpoint (in which case it will be valid), or created manually.\n\nFor convenience, we offer a user-friendly summary of the fields involved. The JSound schema is available on request.\n\n#### Body properties\n\n| Field | Type | Presence | Content |\n|-------|------|----------|---------|\n| AID | string | required | The AID of the archive to which the report element belongs |\n| SectionURI   | string (URI) | required | The URI of the section to which the report element belongs |\n| Name  | string (QName lexical space) | required | The name of the report element (of the form foo:Bar) |\n| Kind  | One of: Concept, Abstract, LineItems, Hypercube, Dimension, Member | optional | One of the six kinds of report element |\n| PeriodType  | One of: instant, duration | optional | Only allowed for the Concept kind. Indicates the period type (whether facts against this concept must have instant or duration periods). |\n| DataType | string (QName lexical space) | optional | Only allowed for the Concept kind. Indicates the data type (value facts against this concept must have). |\n| Balance | One of: credit, debit | optional | Only allowed for the Concept kind, and if the data type is monetary. Indicates the balance. |\n| IsNillable | boolean | optional | Only allowed for the Concept kind. Specifies whether null is accepted as a fact value. |\n\nAdditionally, the following fields are allowed for the purpose of feeding back the output of the report-elements endpoint as input:\n\n- Components (string)\n- IsAbstract (boolean)\n- BaseType (string)\n- ClosestSchemaBuiltinType (string)\n- IsTextBlock (boolean)\n- Labels (string)\n- Facts (string)\n- Labels (string)\n- Label (string)\n- Section (string)\n- CIK (string)\n- EntityRegistrantName (string)\n- FiscalYear (integer)\n- FiscalPeriod (string)\n\nFor report elements with the kind Concept, the data type must be one of the following:\n\n- xbrli:decimalItemType\n- xbrli:floatItemType\n- xbrli:doubleItemType\n- xbrli:integerItemType\n- xbrli:positiveIntegerItemType\n- xbrli:nonPositiveIntegerItemType\n- xbrli:nonNegativeIntegerItemType\n- xbrli:negativeIntegershortItemType\n- xbrli:byteItemType\n- xbrli:intItemType\n- xbrli:longItemType\n- xbrli:unsignedShorItemType\n- xbrli:unsignedByteItemType\n- xbrli:unsignedIntItemType\n- xbrli:unsignedLongItemType\n- xbrli:stringItemType (implied/only one allowed for Hypercube, Dimension, LineItems and Abstract kinds)\n- xbrli:booleanItemType\n- xbrli:hexBinaryItemType\n- xbrli:base64BinaryItemType\n- xbrli:anyURIItemType\n- xbrli:QNameItemType\n- xbrli:durationItemType\n- xbrli:timeItemType\n- xbrli:dateItemType\n- xbrli:gYearMonthItemType\n- xbrli:gYearItemType\n- xbrli:gMonthItemType\n- xbrli:gMonthDayItemType\n- xbrli:gDayItemType\n- xbrli:normalizedStringItemType\n- xbrli:tokenItemType\n- xbrli:languageItemType\n- xbrli:NameItemType\n- xbrli:NCNameItemType\n- xbrli:monetaryItemType (allows Balance)\n- xbrli:pureItemType\n- xbrli:sharesItemType\n- xbrli:fractionItemType\n- nonnum:domainItemType (implied/only one allowed for Member kind)\n- nonnum:escapedItemType\n- nonnum:xmlNodesItemType\n- nonnum:xmlItemType\n- nonnum:textBlockItemType\n- num:percentItemType\n- num:perShareItemType\n- num:areaItemType\n- num:volumeItemType\n- num:massItemType\n- num:weightItemType\n- num:energyItemType\n- num:powerItemType\n- num:lengthItemType\n- num:noDecimalsMonetaryItemType (allows Balance)\n- num:nonNegativeMonetaryItemType (allows Balance)\n- num:nonNegativeNoDecimalsMonetaryItemType (allows Balance)\n- num:enumerationItemType\n\nSeveral report elements can be created at the same time by posting a sequence of non-comma-separated JSON objects as above.\n",
        "operationId": "addReportElements",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "name": "report-element",
            "in": "body",
            "description": "The report element objects, which must be supplied in the body of the request, and which must satisfy the constraints described in the field table.",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report elements have been added.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "One of the supplied report elements is invalid or (if JSON) already exists. Or one of the supplied report elements is a duplicate. Or one of the supplied report elements is inconsistent with existing report elements with the same name in the same archive.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such archive or section could be found.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": null
      },
      "delete": {
        "summary": "Deletes a report element.",
        "operationId": "deleteReportElement",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid_SINGLE"
          },
          {
            "$ref": "#/parameters/section_SINGLE"
          },
          {
            "$ref": "#/parameters/reportElement_SINGLE"
          }
        ],
        "responses": {
          "204": {
            "description": "The report element has been deleted.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Cannot delete more than one report element at a time (safety mechanism).",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such archive or section or report element could be found.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": null
      }
    },
    "/api/rules": {
      "get": {
        "summary": "Retrieve a summary for all rules of a given section",
        "operationId": "getRules",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/archiveFiscalYear_ALL"
          },
          {
            "$ref": "#/parameters/archiveFiscalPeriod_ALL"
          },
          {
            "$ref": "#/parameters/archive-tag"
          },
          {
            "$ref": "#/parameters/section"
          },
          {
            "$ref": "#/parameters/disclosure"
          },
          {
            "$ref": "#/parameters/reportElement"
          },
          {
            "$ref": "#/parameters/label_component"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all rules for the given sections",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity or archive or section could be found",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        }
      }
    },
    "/api/sections": {
      "get": {
        "summary": "Retrieve a summary for all sections of a given archive",
        "operationId": "getSections",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/archiveFiscalYear_ALL"
          },
          {
            "$ref": "#/parameters/archiveFiscalPeriod_ALL"
          },
          {
            "$ref": "#/parameters/archive-tag"
          },
          {
            "$ref": "#/parameters/section"
          },
          {
            "$ref": "#/parameters/hypercube"
          },
          {
            "$ref": "#/parameters/disclosure"
          },
          {
            "$ref": "#/parameters/reportElement"
          },
          {
            "$ref": "#/parameters/label_component"
          },
          {
            "$ref": "#/parameters/validate_components"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all sections for the given archive",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity could be found. / No such archive could be found",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Retrieve information about all sections of a archive",
            "description": "Retrieve information about all sections of a particular archive which is identified by its accession number. Return the result as JSON.",
            "profile": [
              "sec"
            ],
            "parameters": {
              "aid": "0000021344-13-000039"
            }
          },
          {
            "title": "Retrieve information about all sections of COCA COLA's latest 10-K",
            "description": "Retrieve information about all sections of a particular archive which is identified by its accession number. Return the result as JSON.",
            "profile": [
              "sec"
            ],
            "parameters": {
              "ticker": "ko"
            }
          },
          {
            "title": "Retrieve information about all sections of NIPPON STEEL & SUMITOMO METAL CORPORATION's 2014 Q1 archive.",
            "description": "Retrieve information about all sections of a particular archive which is identified by a company ID and a fiscal period. Return the result as JSON.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "eid": "http://disclosure.edinet-fsa.go.jp E01225-000",
              "archiveFiscalYear": 2014,
              "archiveFiscalPeriod": "Q1"
            }
          }
        ]
      },
      "post": {
        "summary": "Add or update sections. A section is identified with an Archive ID (AID) and a section URI.\n\nA section can be created by submitting a JSON object containing general information about the section. This JSON object must be valid agains a JSound schema. It can be either taken from the output of a GET request to the same endpoint (in which case it will be valid), or created manually.\n\nFor convenience, we offer a user-friendly summary of the fields involved. The JSound schema is available on request.\n\n#### Body properties\n\n| Field | Type | Presence | Content |\n|-------|------|----------|---------|\n| AID | string | required | The AID of the archive to which the section belongs |\n| SectionURI   | string | required | The URI of the section |\n| Section  | string | required | A user-friendly label for the section (preferably in English). |\n| Profiles | object | optional | Maps profile names to additional profile-specific information. The profile-specific information must have a Name field containing the profile name, that is, identical to its key. The other fields in the profile information is not restricted. |\n\nAdditionally, the following fields are allowed for the purpose of feeding back the output of the sections endpoint as input:\n\n- Components (string)\n- ReportElements (string)\n- FactTable (string)\n- Spreadsheet (string)\n- Category (string)\n- SubCategory (string)\n- Disclosure (string)\n- NumRules (integer)\n- NumReportElements (integer)\n- NumHypercubes (integer)\n- NumDimensions (integer)\n- NumMembers (integer)\n- NumLineItems (integer)\n- NumAbstracts (integer)\n- NumConcepts (integer)\n- EntityRegistrantName (string)\n- CIK (string)\n- FiscalYear (integer)\n- FiscalPeriod (string)\n- AcceptanceDatetime (string)\n- FormType (string)\n\nSeveral empty sections can be created at the same time by posting a sequence of non-comma-separated JSON objects as above.\n",
        "operationId": "addSections",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format_json"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "name": "section",
            "in": "body",
            "description": "The section objects (they must be valid).",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sections have been added.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "One of the supplied sections is invalid or (if JSON) already exists. Or one of the supplied sections is a duplicate.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such archive could be found.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": null
      },
      "delete": {
        "summary": "Deletes a section.",
        "operationId": "deleteSection",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format_json"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid_SINGLE"
          },
          {
            "$ref": "#/parameters/section_SINGLE"
          }
        ],
        "responses": {
          "204": {
            "description": "Sections have been deleted.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Cannot delete more than one section at a time (safety mechanism).",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such archive could be found.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": null
      }
    },
    "/api/spreadsheet-for-component": {
      "get": {
        "summary": "Retrieve the business-friendly spreadsheet for a given component.\n\nA component can be selected in several ways, for example with an Archive ID (AID), section URI and hypercube name, or with a CIK, fiscal year, fiscal period, and disclosure, etc.\n",
        "operationId": "getSpreadsheetForComponent",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format_json_html"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/section"
          },
          {
            "$ref": "#/parameters/hypercube"
          },
          {
            "$ref": "#/parameters/concept"
          },
          {
            "$ref": "#/parameters/fiscalYear"
          },
          {
            "$ref": "#/parameters/fiscalPeriod"
          },
          {
            "$ref": "#/parameters/fiscalPeriodType"
          },
          {
            "$ref": "#/parameters/archiveFiscalYear_ALL"
          },
          {
            "$ref": "#/parameters/archiveFiscalPeriod_ALL"
          },
          {
            "$ref": "#/parameters/additional-rules"
          },
          {
            "$ref": "#/parameters/audit-trails"
          },
          {
            "$ref": "#/parameters/open"
          },
          {
            "$ref": "#/parameters/archive-tag"
          },
          {
            "$ref": "#/parameters/prefix:dimension"
          },
          {
            "$ref": "#/parameters/prefix:dimension::category"
          },
          {
            "$ref": "#/parameters/prefix:dimension::visible"
          },
          {
            "$ref": "#/parameters/prefix:dimension::slicer"
          },
          {
            "$ref": "#/parameters/disclosure"
          },
          {
            "$ref": "#/parameters/reportElement"
          },
          {
            "$ref": "#/parameters/label_component"
          },
          {
            "$ref": "#/parameters/aggregation-function"
          },
          {
            "$ref": "#/parameters/validate_facts"
          },
          {
            "$ref": "#/parameters/merge"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/override_DEFINITION_MODEL"
          },
          {
            "$ref": "#/parameters/eliminate"
          },
          {
            "$ref": "#/parameters/elimination-threshold"
          },
          {
            "$ref": "#/parameters/populate"
          },
          {
            "$ref": "#/parameters/auto-slice"
          },
          {
            "$ref": "#/parameters/row"
          },
          {
            "$ref": "#/parameters/column"
          },
          {
            "$ref": "#/parameters/flatten-row-headers"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the fact table for the given component",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity could be found. / No such archive could be found. / No such component could be found",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Fact Table as CSV",
            "description": "Retrieve the fact table for a particular component. Return the result as CSV.",
            "profile": [
              "sec"
            ],
            "parameters": {
              "aid": "0000021344-14-000008",
              "section": "http://www.thecocacolacompany.com/role/ConsolidatedBalanceSheets",
              "format": "csv"
            }
          },
          {
            "title": "Fact Table of Coca Cola's Q3/2013 Balance Sheet",
            "description": "Retrieve the fact table for the Balance Sheet of Coca Cola archive identified with accession number 0000021344-13-000050. Return the result as XML.",
            "profile": [
              "sec"
            ],
            "parameters": {
              "format": "xml",
              "aid": "0000021344-13-000050",
              "disclosure": "BalanceSheet"
            }
          },
          {
            "title": "Get B/S report by company name/ID and period",
            "description": "Get B/S report by company name/ID and period.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "eid": "http://info.edinet-fsa.go.jp E01225-000",
              "fiscalYear": "2014",
              "fiscalPeriod": "Q1",
              "section": "http://disclosure.edinet-fsa.go.jp/role/jppfs/rol_QuarterlyConsolidatedBalanceSheet",
              "profile-name": "japan",
              "merge": "true"
            }
          },
          {
            "title": "Get P/L report by company name/ID and period",
            "description": "Get B/S report by company name/ID and period.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "eid": "http://info.edinet-fsa.go.jp E01225-000",
              "fiscalYear": "2014",
              "fiscalPeriod": "Q1",
              "section": "http://disclosure.edinet-fsa.go.jp/role/jppfs/rol_YearToQuarterEndConsolidatedStatementOfIncome",
              "profile-name": "japan",
              "merge": "true"
            }
          },
          {
            "title": "Get C/F report by company name/ID and period",
            "description": "Get C/F report by company name/ID and period.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "eid": "http://info.edinet-fsa.go.jp E01225-000",
              "fiscalYear": "2014",
              "fiscalPeriod": "Q1",
              "section": "http://disclosure.edinet-fsa.go.jp/role/jpcrp/rol_NotesQuarterlyConsolidatedStatementOfCashFlows",
              "profile-name": "japan",
              "merge": "true"
            }
          },
          {
            "title": "Get B/S report for multiple FYs by company name/ID and range of period",
            "description": "Get B/S report for multiple FYs by company name/ID and range of period.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "eid": "http://info.edinet-fsa.go.jp E01225-000",
              "fiscalYear": "2014",
              "fiscalPeriod": "Q1",
              "section": "http://disclosure.edinet-fsa.go.jp/role/jppfs/rol_QuarterlyConsolidatedBalanceSheet",
              "profile-name": "japan",
              "merge": "true"
            }
          },
          {
            "title": "Get P/L report for multiple FYs by company name/ID and range of period",
            "description": "Get P/L report for multiple FYs by company name/ID and range of period.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "eid": "http://info.edinet-fsa.go.jp E01225-000",
              "fiscalYear": "2014",
              "fiscalPeriod": "Q1",
              "section": "http://disclosure.edinet-fsa.go.jp/role/jppfs/rol_YearToQuarterEndConsolidatedStatementOfIncome",
              "profile-name": "japan",
              "merge": "true"
            }
          },
          {
            "title": "Get C/S report for multiple FYs by company name/ID and range of period",
            "description": "Get C/S report for multiple FYs by company name/ID and range of period.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "eid": "http://info.edinet-fsa.go.jp E01225-000",
              "fiscalYear": "2014",
              "fiscalPeriod": "Q1",
              "section": "http://disclosure.edinet-fsa.go.jp/role/jpcrp/rol_NotesQuarterlyConsolidatedStatementOfCashFlows",
              "profile-name": "japan",
              "merge": "true"
            }
          },
          {
            "title": "Get B/S report of different companies by list of company names/IDs and period",
            "description": "Get B/S report of different companies by list of company names/IDs and period.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "entity-tag": "ALL",
              "fiscalYear": "2014",
              "fiscalPeriod": "Q1",
              "section": "http://disclosure.edinet-fsa.go.jp/role/jppfs/rol_QuarterlyConsolidatedBalanceSheet",
              "profile-name": "japan",
              "merge": "true"
            }
          },
          {
            "title": "Get P/L report of different companies by list of company names/IDs and period",
            "description": "Get P/L report of different companies by list of company names/IDs and period.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "entity-tag": "ALL",
              "fiscalYear": "2014",
              "fiscalPeriod": "Q1",
              "section": "http://disclosure.edinet-fsa.go.jp/role/jppfs/rol_YearToQuarterEndConsolidatedStatementOfIncome",
              "profile-name": "japan",
              "merge": "true"
            }
          },
          {
            "title": "Get C/S report of different companies by list of company names/IDs and period",
            "description": "Get C/S report of different companies by list of company names/IDs and period.",
            "profile": [
              "japan"
            ],
            "parameters": {
              "entity-tag": "ALL",
              "fiscalYear": "2014",
              "fiscalPeriod": "Q1",
              "section": "http://disclosure.edinet-fsa.go.jp/role/jpcrp/rol_NotesQuarterlyConsolidatedStatementOfCashFlows",
              "profile-name": "japan",
              "merge": "true"
            }
          }
        ]
      }
    },
    "/api/spreadsheet-for-report": {
      "get": {
        "summary": "Retrieve the business-friendly spreadsheet for a report.\n\nFilters can be overriden. Filters MUST be overriden if the report is not already filtering.\n",
        "operationId": "getSpreadsheetForReport",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format_json_html"
          },
          {
            "$ref": "#/parameters/format-indent"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid"
          },
          {
            "$ref": "#/parameters/eid"
          },
          {
            "$ref": "#/parameters/cik"
          },
          {
            "$ref": "#/parameters/ticker"
          },
          {
            "$ref": "#/parameters/edinetcode"
          },
          {
            "$ref": "#/parameters/entity-tag"
          },
          {
            "$ref": "#/parameters/sic"
          },
          {
            "$ref": "#/parameters/fiscalYear"
          },
          {
            "$ref": "#/parameters/fiscalPeriod"
          },
          {
            "$ref": "#/parameters/fiscalPeriodType"
          },
          {
            "$ref": "#/parameters/report"
          },
          {
            "$ref": "#/parameters/validate_facts"
          },
          {
            "$ref": "#/parameters/audit-trails"
          },
          {
            "$ref": "#/parameters/language"
          },
          {
            "$ref": "#/parameters/eliminate"
          },
          {
            "$ref": "#/parameters/elimination-threshold"
          },
          {
            "$ref": "#/parameters/populate"
          },
          {
            "$ref": "#/parameters/row"
          },
          {
            "$ref": "#/parameters/column"
          },
          {
            "$ref": "#/parameters/flatten-row-headers"
          },
          {
            "$ref": "#/parameters/archive-tag"
          },
          {
            "$ref": "#/parameters/archiveFiscalYear_ALL"
          },
          {
            "$ref": "#/parameters/archiveFiscalPeriod_ALL"
          },
          {
            "$ref": "#/parameters/override"
          },
          {
            "$ref": "#/parameters/open"
          },
          {
            "$ref": "#/parameters/prefix:dimension"
          },
          {
            "$ref": "#/parameters/prefix:dimension::category"
          },
          {
            "$ref": "#/parameters/prefix:dimension::visible"
          },
          {
            "$ref": "#/parameters/prefix:dimension::slicer"
          },
          {
            "$ref": "#/parameters/aggregation-function"
          }
        ],
        "responses": {
          "200": {
            "description": "Return the spreadsheet for the given report",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity could be found. / No such archive could be found",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Spreadsheet for the Fundamental Accounting Concepts of COCA COLA's FY 2010..2013.",
            "description": "Retrieve the spreadsheet for a particular report. Return the result as JSON, with eliminated empty rows/columns.",
            "profile": [
              "sec"
            ],
            "parameters": {
              "report": "FundamentalAccountingConcepts",
              "ticker": "ko",
              "fiscalYear": [
                "2013",
                "2012",
                "2011",
                "2010"
              ]
            }
          }
        ]
      }
    },
    "/api/taxonomies": {
      "post": {
        "summary": "Adds a new taxonomy archive given one or more entrypoints. The taxonomy archive is identified with an Archive ID (AID).\n",
        "operationId": "addTaxonomy",
        "tags": [
          "data"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/profile-name"
          },
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/aid_SINGLE"
          },
          {
            "$ref": "#/parameters/eid_SINGLE_REQUIRED"
          },
          {
            "name": "entrypoint",
            "in": "query",
            "description": "The URI of a taxonomy entrypoint.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "insert-entity",
            "in": "query",
            "description": "If false, and one or more of the archive entities are not present in the repository an error is raised. If true, the missing entity is inserted. (Default is true)",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "Taxonomy archive has been added.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "One of the supplied entrypoints is invalid.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or has insufficient privileges.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Access denied.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "No such entity could be found.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "409": {
            "description": "Taxonomy archive already exists.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Imports an XBRL taxonomy",
            "description": "Imports an XBRL taxonomy given its entrypoint",
            "parameters": {
              "eid": "http://info.edinet-fsa.go.jp TAXONOMIES",
              "aid": "JPFR-DI-2009-03-09",
              "entrypoint": "http://info.edinet-fsa.go.jp/jp/fr/gaap/o/di/2009-03-09/jpfr-di-2009-03-09.xsd"
            },
            "method": "post"
          }
        ]
      }
    },
    "/reports/reports": {
      "get": {
        "summary": "Retrieve a list of all Reports",
        "operationId": "getReports",
        "tags": [
          "reports"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "A report id (e.g. 1fueA5hrxIHxvRf7Btr_J6efDJ3qp-s9KV731wDc4OOc)",
            "required": false,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "description": "A user's email address to filter reports owned by this user (i.e. all reports if user = authorized user or only public-read reports of user)",
            "required": false,
            "type": "string"
          },
          {
            "name": "public-read",
            "in": "query",
            "description": "Filter listed reports to return only those that are publicly readable",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "private",
            "in": "query",
            "description": "Filter listed reports to return only those that are private",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "export",
            "in": "query",
            "description": "If set to true a report will be retrieved in a binary format. Only a single report can be exported at once",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "name": "onlyMetadata",
            "in": "query",
            "description": "If set to true will return only the metadata of reports instead of the complete reports. (default: false)",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns reports listing",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or missing",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Forbidden: the specified project token doesn't have sufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "Not found: a report id was given as parameter '_id', but a report with the specified id could not be found",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Retrieve a specific report",
            "description": "Retrieve the schema for a specific report identified by its id. Return the result as JSON.",
            "request": "[API_URL]/_queries/public/reports/reports?_id=1fueA5hrxIHxvRf7Btr_J6efDJ3qp-s9KV731wDc4OOc&token=00000-00-000-00000",
            "response": ""
          },
          {
            "title": "Retrieve all reports",
            "description": "Retrieve the schemas of all reports. Return the result as JSON.",
            "request": "[API_URL]/_queries/public/reports/reports?token=00000-00-000-00000",
            "response": ""
          }
        ]
      }
    },
    "/reports/add-report": {
      "post": {
        "summary": "Add a new, update an existing report or validates a report on the fly",
        "operationId": "addOrReplaceOrValidateReport",
        "tags": [
          "reports"
        ],
        "parameters": [
          {
            "name": "report",
            "in": "body",
            "description": "A JSON object containing the report",
            "required": true,
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "public-read",
            "in": "query",
            "description": "Shortcut to make a report publicly readable",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "private",
            "in": "query",
            "description": "Will make this report private (not readable for others; default for newly created reports)",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "validation-only",
            "in": "query",
            "description": "This parameter is either given without any value (means: on) or absent (means: off) or its value is castable to a boolean. Turns validation-only mode on or off",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "import",
            "in": "query",
            "description": "If set to true, the body of the request will be treated as binary report and imported into the users account",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "_id",
            "in": "query",
            "description": "A report id (e.g. FundamentalAccountingConcepts). For example, when importing a report the id can be provided to create a new report",
            "required": false,
            "type": "string"
          },
          {
            "name": "label",
            "in": "query",
            "description": "A report label (e.g. 'Key Value Indicators'). Will overwrite the Label of the report given in the body (binary report as well as json report)",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/token"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the report as it was stored. Or, the validation results in an array.",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request: A mandatory parameter is missing or a given parameter is invalid",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or missing",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Forbidden: the specified project token doesn't have sufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "409": {
            "description": "Conflict: The remotely stored report contains changes that are newer than your local copy of the report. Saving failed.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Add or replace a report",
            "description": "Add a new report or replace an existing one. Return the stored report as JSON.",
            "request": "[API_URL]/_queries/public/reports/add-report?token=00000-00-000-00000",
            "response": "{Name: 'FundamentalAccountingConcepts'}"
          },
          {
            "title": "Validate a report",
            "description": "Validate the structure of a report JSON object. Return warnings and errors in a JSON Array.",
            "request": "[API_URL]/_queries/public/reports/add-report?validation-only&token=00000-00-000-00000"
          }
        ]
      }
    },
    "/reports/delete-report": {
      "post": {
        "summary": "Delete an existing report",
        "operationId": "removeReport",
        "tags": [
          "reports"
        ],
        "parameters": [
          {
            "name": "_id",
            "in": "query",
            "description": "A report id (e.g. FundamentalAccountingConcepts)",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/token"
          }
        ],
        "responses": {
          "204": {
            "description": "Report has been deleted. Empty response."
          },
          "400": {
            "description": "Bad Request: a mandatory parameter is missing or a given parameter is not valid",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "401": {
            "description": "Unauthorized: the specified project token is invalid, expired, or missing",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "Forbidden: the specified project token doesn't have sufficient privileges",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "404": {
            "description": "Not found: a report id was given as parameter '_id', but a report with the specified id could not be found",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request.",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Delete a report",
            "description": "Remove report with id FundamentalAccountingConcepts.",
            "request": "[API_URL]/_queries/public/reports/delete-report?_id=FundamentalAccountingConcepts&token=00000-00-000-00000",
            "response": ""
          }
        ]
      }
    },
    "/reports/parameters": {
      "post": {
        "summary": "Retrieve a list of all Report Parameters",
        "operationId": "getParameters",
        "tags": [
          "reports"
        ],
        "parameters": [
          {
            "name": "parameter",
            "in": "query",
            "description": "Only retrieve values for this parameter",
            "required": false,
            "type": "string",
            "enum": [
              "years",
              "periods",
              "sics",
              "tags",
              "entities"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Returns parameters object",
            "schema": {
              "type": "object"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Retrieve report parameters",
            "description": "Retrieve an object with parameter name fields and array values containing the parameter values.",
            "request": "[API_URL]/_queries/public/reports/parameters",
            "response": ""
          }
        ]
      }
    },
    "/session/login": {
      "post": {
        "summary": "Login with email and password in order to retrieve a token.",
        "operationId": "login",
        "tags": [
          "sessions"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of user to login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password of user to login",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "if the user was logged in successfully",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "if a mandatory parameter is missing",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "if the user doesn't exist or could not be authenticated",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Login",
            "description": "Login and retrieve a token",
            "request": "[API_URL]/_queries/public/session/login?_method=POST&email=you%40xbrl.io&password=secret",
            "response": "{ \"success\" : true, \"token\" : \"2b332b8e-3e90-40d2-8b83-28862ec30ee1\", \"name\" : \"Your Name\" }"
          }
        ]
      }
    },
    "/session/logout": {
      "post": {
        "summary": "Logout the user identified by the given API key.",
        "operationId": "logout",
        "tags": [
          "sessions"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/token"
          }
        ],
        "responses": {
          "200": {
            "description": "if the user was logged out successfully",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "400": {
            "description": "if a mandatory parameter is missing",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Logout",
            "description": "Logout the user identified by the given token",
            "request": "[API_URL]/_queries/public/session/logout?_method=POST&token=a02516b2-2cdb-4ef3-9e2e-adfaa3660b87",
            "response": "{ \"success\" : true }"
          }
        ]
      }
    },
    "/session/token": {
      "post": {
        "summary": "Create a token having a custom expiration duration.",
        "operationId": "token",
        "tags": [
          "sessions"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of user that creates the token",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password of user that creates the token",
            "required": true,
            "type": "string"
          },
          {
            "name": "expiration",
            "in": "query",
            "description": "Expiration of the token, in ISO format (e.g.: 2014-04-29T14:32:05.0321Z)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "if the token was created successfully",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "if a mandatory parameter is missing",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "if the user doesn't exist or could not be authenticated",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Create a new token",
            "description": "Create a token that expires on Jan 1st 2020",
            "request": "[API_URL]/_queries/public/session/token?_method=POST&email=you%40xbrl.io&password=secret&expiration=2020-01-01T00:00:00.000000Z",
            "response": "{ \"success\" : true, \"token\" : \"2b332b8e-3e90-40d2-8b83-28862ec30ee1\" }"
          }
        ]
      }
    },
    "/session/revoke": {
      "post": {
        "summary": "Revoke a token having a custom expiration duration.",
        "operationId": "revoke",
        "tags": [
          "sessions"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of user that owns the token",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password of user that owns the token",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/token"
          }
        ],
        "responses": {
          "200": {
            "description": "if the token was removed successfully",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "400": {
            "description": "if a mandatory parameter is missing",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "if the user doesn't exist or could not be authenticated",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "Revoke a token",
            "description": "Revoke a token having a custom expiration duration",
            "request": "[API_URL]/_queries/public/session/revoke?_method=POST&email=you%40xbrl.io&password=secret&token=a02516b2-2cdb-4ef3-9e2e-adfaa3660b87",
            "response": "{ \"success\" : true }"
          }
        ]
      }
    },
    "/session/tokens": {
      "get": {
        "summary": "List tokens of a user identified by its token.",
        "operationId": "tokens",
        "tags": [
          "sessions"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/format"
          },
          {
            "$ref": "#/parameters/token"
          }
        ],
        "responses": {
          "200": {
            "description": "if the tokens are listed successfully",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "if a mandatory parameter is missing",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        },
        "x-examples": [
          {
            "title": "List Tokens",
            "description": "List tokens of a particular user",
            "request": "[API_URL]/_queries/public/session/tokens?_method=POST&token=a02516b2-2cdb-4ef3-9e2e-adfaa3660b87",
            "response": "{ \"success\" : true, \"results\": [ { \"token\" : \"2b332b8e-3e90-40d2-8b83-28862ec30ee1\", \"expiration\" : \"2020-01-01T00:00:00.000000Z\" } ] }"
          }
        ]
      }
    },
    "/users/get": {
      "get": {
        "summary": "Retrieve user record by user ID or email. If no user ID or email is specified, the record of the current user is returned.",
        "operationId": "getUser",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "query",
            "description": "A user ID",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "A user email address",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/token"
          }
        ],
        "responses": {
          "200": {
            "description": "A user record",
            "schema": {
              "type": "object"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        }
      }
    },
    "/users/new": {
      "post": {
        "summary": "Create a new user record",
        "operationId": "newUser",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "firstname",
            "in": "query",
            "description": "The new user first name",
            "required": true,
            "type": "string"
          },
          {
            "name": "lastname",
            "in": "query",
            "description": "The new user last name",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "The new user email",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The new user password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation outcome",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        }
      }
    },
    "/users/edit": {
      "post": {
        "summary": "Change a user firstname and lastname, and, optionally, his email.",
        "operationId": "editUser",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "firstname",
            "in": "query",
            "description": "The user new first name",
            "required": true,
            "type": "string"
          },
          {
            "name": "lastname",
            "in": "query",
            "description": "The user new last name",
            "required": true,
            "type": "string"
          },
          {
            "name": "newemail",
            "in": "query",
            "description": "The user new email",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "Current email of the authorized user (needed if changing the email)",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "Current password of the authorized user (needed if changing the email)",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/token"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "if the user's infos were updated successfully",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "400": {
            "description": "if a mandatory parameter is missing",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "if the user doesn't exist or could not be authenticated",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        }
      }
    },
    "/users/resetPassword": {
      "post": {
        "summary": "Change a user password",
        "operationId": "resetPassword",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "newpassword",
            "in": "query",
            "description": "New password",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of the authorized user",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password of the authorized user",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/token"
          }
        ],
        "responses": {
          "200": {
            "description": "if the user's password was updated successfully",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "400": {
            "description": "if a mandatory parameter is missing",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "if the user doesn't exist or could not be authenticated",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        }
      }
    },
    "/users/forgotPassword": {
      "post": {
        "summary": "Send an email with the reset password token.",
        "operationId": "forgotPassword",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "The user email",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "if the user's reset password token was sent via email",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        }
      }
    },
    "/users/setPassword": {
      "post": {
        "summary": "Set the password for a user based on email and the reset password token",
        "operationId": "setPassword",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "The email of the user to set the password",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The new password",
            "required": true,
            "type": "string"
          },
          {
            "name": "resetToken",
            "in": "query",
            "description": "The reset password token",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/format"
          }
        ],
        "responses": {
          "200": {
            "description": "if the user's password was updated successfully",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "400": {
            "description": "if a mandatory parameter is missing",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "if the user doesn't exist or the token is invalid",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "An internal error occurred during the processing of the request",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        }
      }
    },
    "/users/isAuthorized": {
      "post": {
        "summary": "Checks to see if the current logged in user has a particular right",
        "operationId": "isAuthorized",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "name": "right",
            "in": "query",
            "description": "The right id",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/token"
          }
        ],
        "responses": {
          "200": {
            "description": "if the user has the right",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "400": {
            "description": "if a mandatory parameter is missing",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "403": {
            "description": "if the user doesn't exist or the token is invalid",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          },
          "500": {
            "description": "if the user doesn't have the right",
            "schema": {
              "$ref": "#/definitions/Outcome"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Outcome": {
      "description": "Information about an operation outcome",
      "required": [
        "success"
      ],
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Whether the requests succeeded or failed."
        },
        "description": {
          "type": "string",
          "description": "A description of the error, if any."
        }
      }
    }
  },
  "parameters": {
    "additional-rules": {
      "name": "additional-rules",
      "in": "query",
      "description": "The name of a report from which to use rules in addition to a report's rules (e.g. FundamentalAccountingConcepts).",
      "required": false,
      "type": "string",
      "enum": [
        "FundamentalAccountingConcepts",
        "null"
      ]
    },
    "aggregation-function": {
      "name": "aggregation-function",
      "in": "query",
      "description": "Specify an aggregation function to aggregate facts. Will aggregate facts, grouped by dicers, but aggregated along slicers, with this function.",
      "required": false,
      "type": "string",
      "enum": [
        "sum",
        "avg",
        "min",
        "max",
        "count",
        "avedev",
        "median",
        "mode",
        "product",
        "stdev",
        "stdeva",
        "stdevp",
        "stdevpa",
        "sumsq",
        "var",
        "vara",
        "varp",
        "varpa"
      ]
    },
    "aid": {
      "name": "aid",
      "in": "query",
      "description": "Archive IDs, to retrieve archives, sections, components or slice facts.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "aid_SINGLE": {
      "name": "aid",
      "in": "query",
      "description": "Archive ID of the archive or taxonomy.",
      "required": false,
      "type": "string"
    },
    "archiveFiscalPeriod": {
      "name": "archiveFiscalPeriod",
      "in": "query",
      "description": "The fiscal period focus of the archive, to retrieve archives, sections, components or slice facts (default: no filtering).",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "enum": [
        "Q1",
        "Q2",
        "Q3",
        "Q4",
        "FY",
        "ALL"
      ],
      "x-profile": [
        "sec",
        "japan"
      ]
    },
    "archiveFiscalPeriod_ALL": {
      "name": "archiveFiscalPeriod",
      "in": "query",
      "description": "The fiscal period focus of the archive, to retrieve archives, sections, components or slice facts (default: ALL).",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "enum": [
        "Q1",
        "Q2",
        "Q3",
        "Q4",
        "FY",
        "ALL"
      ],
      "x-profile": [
        "sec",
        "japan"
      ],
      "default": "ALL"
    },
    "archiveFiscalYear": {
      "name": "archiveFiscalYear",
      "in": "query",
      "description": "The fiscal year focus of the archive, to retrieve archives, sections, components or slice facts (default: no filtering).",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "enum": [
        "year (e.g. 2011)",
        "LATEST",
        "ALL"
      ],
      "x-profile": [
        "sec",
        "japan"
      ]
    },
    "archiveFiscalYear_ALL": {
      "name": "archiveFiscalYear",
      "in": "query",
      "description": "The fiscal year focus of the archive, to retrieve archives, sections, components or slice facts (default: ALL).",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "enum": [
        "year (e.g. 2011)",
        "LATEST",
        "ALL"
      ],
      "x-profile": [
        "sec",
        "japan"
      ],
      "default": "ALL"
    },
    "audit-trails": {
      "name": "audit-trails",
      "in": "query",
      "description": "Whether audit trails should be included in each fact (default: no).",
      "required": false,
      "type": "string",
      "enum": [
        "yes",
        "no"
      ],
      "default": "no"
    },
    "auto-slice": {
      "name": "auto-slice",
      "in": "query",
      "description": "If set to true then slicers are automatically defined (default: true).",
      "required": false,
      "type": "boolean",
      "default": true
    },
    "builtin": {
      "name": "builtin",
      "in": "query",
      "description": "Whether to include built-in report elements (false by default).",
      "required": false,
      "type": "boolean",
      "default": false
    },
    "cik": {
      "name": "cik",
      "in": "query",
      "description": "The CIK of a company, to retrieve entities, archives, sections, components or dice facts.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "x-profile": [
        "sec"
      ]
    },
    "column": {
      "name": "column",
      "in": "query",
      "description": "Filters the spreadsheet to display only the columns specified (default: no filter). Deactivates elimination.",
      "required": false,
      "format": "xs:positiveInteger",
      "type": "array",
      "items": {
        "type": "integer"
      },
      "collectionFormat": "multi"
    },
    "concept": {
      "name": "concept",
      "in": "query",
      "description": "The name of a concept to dice facts (a synonym for the dimension xbrl:Concept).",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "count": {
      "name": "count",
      "in": "query",
      "description": "If true, only outputs statistics (default: false).",
      "required": false,
      "type": "boolean",
      "default": false
    },
    "disclosure": {
      "name": "disclosure",
      "in": "query",
      "description": "A disclosure, to identify sections or components (e.g. BalanceSheet).",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "x-profile": [
        "sec",
        "japan"
      ]
    },
    "edinetcode": {
      "name": "edinetcode",
      "in": "query",
      "description": "The EDINET code of a company, to retrieve entities, archives, sections, components or dice facts.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "x-profile": [
        "japan"
      ]
    },
    "elimination-threshold": {
      "name": "elimination-threshold",
      "in": "query",
      "description": "When you eliminate, you can specify a threshold of elimination between 0 and 100. If the threshold is set to 0 (which is the default), only fully empty rows and columns are eliminated. With 100, everything is eliminated. With a value inbetween, say, 50, the rows and columns with less than 50% of filled cells are eliminated (Default: 0).",
      "required": false,
      "format": "xs:positiveInteger",
      "type": "integer",
      "default": 0
    },
    "eid": {
      "name": "eid",
      "in": "query",
      "description": "The EIDs (scheme + local name) of a company, to retrieve entities, archives, sections, components or dice facts.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "eid_SINGLE_REQUIRED": {
      "name": "eid",
      "in": "query",
      "description": "The EID (scheme + local name) of a company, to add a new taxonomy.",
      "required": true,
      "type": "string"
    },
    "eid_SINGLE": {
      "name": "eid",
      "in": "query",
      "description": "The EID (scheme + local name) of a company.",
      "required": false,
      "type": "string"
    },
    "eliminate": {
      "name": "eliminate",
      "in": "query",
      "description": "Whether to eliminate empty rows / columns (Default: true if no row / column parameter is used).",
      "required": false,
      "type": "boolean"
    },
    "archive-tag": {
      "name": "archive-tag",
      "in": "query",
      "description": "The tag of the archive, to retrieve archives, sections, components or slice facts (default: no filtering).",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "enum": [
        "EDINET",
        "TDNET",
        "entity",
        "quarterly-securities-report",
        "extraordinary-report",
        "internal-control-report",
        "annual-securities-report",
        "reports-of-possession-of-large-volumes",
        "change-report",
        "amend"
      ],
      "x-profile": [
        "japan"
      ]
    },
    "fiscalYear": {
      "name": "fiscalYear",
      "in": "query",
      "description": "A fiscal year to slice facts (a synonym for the dimension xbrl28:FiscalYear, default: no filtering).",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "enum": [
        "year (e.g. 2011)",
        "LATEST",
        "ALL"
      ],
      "x-profile": [
        "sec",
        "japan"
      ]
    },
    "fiscalPeriod": {
      "name": "fiscalPeriod",
      "in": "query",
      "description": "A fiscal period to slice facts (a synonym for the dimension xbrl28:FiscalPeriod, default: no filtering).",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "enum": [
        "Q1",
        "Q2",
        "Q3",
        "Q4",
        "FY",
        "ALL"
      ],
      "x-profile": [
        "sec",
        "japan"
      ]
    },
    "fiscalPeriodType": {
      "name": "fiscalPeriodType",
      "in": "query",
      "description": "A fiscal period type to slice facts (a synonym for the dimension xbrl28:FiscalPeriodType, default: no filtering).",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "enum": [
        "instant",
        "YTD",
        "QTD"
      ],
      "x-profile": [
        "sec",
        "japan"
      ]
    },
    "flatten-row-headers": {
      "name": "flatten-row-headers",
      "in": "query",
      "description": "Whether to flatten row headers to single columns (Default: true).",
      "required": false,
      "type": "boolean",
      "default": true
    },
    "format": {
      "name": "format",
      "in": "query",
      "description": "Returns the results in the supplied format",
      "required": false,
      "type": "string",
      "enum": [
        "json",
        "csv",
        "xml",
        "excel",
        "html"
      ],
      "default": "json",
      "x-exclude-from-bindings": true
    },
    "format_json": {
      "name": "format",
      "in": "query",
      "description": "Returns the results in the supplied format",
      "required": false,
      "type": "string",
      "enum": [
        "json"
      ],
      "default": "json",
      "x-exclude-from-bindings": true
    },
    "format_json_html": {
      "name": "format",
      "in": "query",
      "description": "Returns the results in the supplied format",
      "required": false,
      "type": "string",
      "enum": [
        "json",
        "html"
      ],
      "default": "json",
      "x-exclude-from-bindings": true
    },
    "format_atom": {
      "name": "format",
      "in": "query",
      "description": "Returns the results in the supplied format",
      "required": false,
      "type": "string",
      "enum": [
        "json",
        "csv",
        "xml",
        "excel",
        "html",
        "atom-xml"
      ],
      "default": "json",
      "x-exclude-from-bindings": true
    },
    "format-indent": {
      "name": "format-indent",
      "in": "query",
      "description": "Whether or not to indent JSON or XML output (default: no indent).",
      "required": false,
      "type": "string",
      "enum": [
        "yes",
        "no"
      ],
      "default": "no",
      "x-exclude-from-bindings": true
    },
    "hypercube": {
      "name": "hypercube",
      "in": "query",
      "description": "The name of a hypercube report element, to retrieve components / sections.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "hypercube_SINGLE": {
      "name": "hypercube",
      "in": "query",
      "description": "The name of a hypercube report element, to retrieve labels.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "indent": {
      "name": "indent",
      "in": "query",
      "description": "If set to true all labels will be prepended with 8 space characters for each level of depth within the model structure (default: false).",
      "required": false,
      "type": "boolean",
      "default": false
    },
    "label_component": {
      "name": "label",
      "in": "query",
      "description": "A search term to search in the labels of components, to retrieve components (e.g. stock).",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "labels": {
      "name": "labels",
      "in": "query",
      "description": "Whether human-readable labels should be included for concepts in each fact (default: false).",
      "required": false,
      "type": "boolean",
      "default": false
    },
    "metadata": {
      "name": "metadata",
      "in": "query",
      "description": "Whether metadata about the facts concept and dimensions should be included in each fact (default: false).",
      "type": "boolean",
      "required": false,
      "default": false
    },
    "labelRole": {
      "name": "labelRole",
      "in": "query",
      "description": "A label role (default: no filtering by label role). A more comprehensive list of label roles can be found in the [XBRL Standard](http://www.xbrl.org/Specification/XBRL-2.1/REC-2003-12-31/XBRL-2.1-REC-2003-12-31+corrected-errata-2013-02-20.html#Standard-label-role-attribute-values).",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "enum": [
        "http://www.xbrl.org/2003/role/label",
        "http://www.xbrl.org/2003/role/terseLabel",
        "http://www.xbrl.org/2003/role/verboseLabel",
        "http://www.xbrl.org/2003/role/totalLabel",
        "http://www.xbrl.org/2008/role/label",
        "http://www.xbrl.org/2008/role/verboseLabel",
        "http://www.xbrl.org/2008/role/terseLabel",
        "http://www.xbrl.org/2008/role/documentation"
      ]
    },
    "language": {
      "name": "language",
      "in": "query",
      "description": "A language code (default: en-US) for displaying labels.",
      "required": false,
      "type": "string",
      "enum": [
        "en-US",
        "en",
        "ja",
        "he",
        "fr",
        "de-CH",
        "de",
        "es",
        "zh"
      ]
    },
    "map": {
      "name": "map",
      "in": "query",
      "description": "[Deprecated, use report] The concept map that should be used to resolve the concept (default: none).",
      "required": false,
      "type": "string",
      "enum": [
        "FundamentalAccountingConcepts",
        "null"
      ],
      "x-deprecated": true
    },
    "merge": {
      "name": "merge",
      "in": "query",
      "description": "Whether to merge components if multiple components are retrieved. By default, it is true. If false, a random component is selected if multiple are retrieved (default: true).",
      "required": false,
      "type": "boolean",
      "default": true
    },
    "open": {
      "name": "open",
      "in": "query",
      "description": "Whether the hypercube query has open hypercube semantics, i.e., automatically stretches to accommodate for all found dimensions (default: false).",
      "required": false,
      "type": "boolean",
      "default": false
    },
    "onlyTextBlocks": {
      "name": "onlyTextBlocks",
      "in": "query",
      "description": "If set to true only labels for concepts defined as textBlockItemType are returned (default: false).",
      "required": false,
      "type": "boolean",
      "default": false
    },
    "override": {
      "name": "override",
      "in": "query",
      "description": "Whether the static component or report hypercube should be tampered with using the same hypercube-building API as the facts endpoint (default: true if a profile is active, otherwise automatically activated).",
      "required": false,
      "type": "boolean"
    },
    "override_DEFINITION_MODEL": {
      "name": "override",
      "in": "query",
      "description": "Whether the static component or report hypercube should be tampered with using the same hypercube-building API as the facts endpoint (default: true if a profile is active, but false if a definition model is defined in the component).",
      "required": false,
      "type": "boolean"
    },
    "populate": {
      "name": "populate",
      "in": "query",
      "description": "Whether to populate cells with facts (Default: true). If false, populate with metadata, that is, aspects and concept data type, period type, balance.",
      "required": false,
      "default": true,
      "type": "boolean"
    },
    "prefix:dimension": {
      "name": "prefix:dimension",
      "in": "query",
      "description": "The name of a dimension used for slicing and dicing facts. Accepted format: prefix:dimension. As a value, the value of the dimension or ALL can be provided if all facts with this dimension should be retrieved.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "x-binding-name": "dimensions",
      "x-binding-description": "A set of dimension names and values used for filtering. As a value, the value of the dimension or ALL can be provided if all facts with this dimension should be retrieved. Each key is in the form prefix:dimension, each value is a string.",
      "x-name-pattern": "^[^:]+:[^:]+$"
    },
    "prefix:dimension::aggregation": {
      "name": "prefix:dimension::aggregation",
      "in": "query",
      "description": "[Deprecated] Specifies whether this dimension is a dicer ('group') or not ('no'). If a dicer, facts will be grouped along this dimension before applying the supplied aggregation function. By default, all key aspects, except those explicitly specified as slicers, are dicers ('group') and non-key aspects are not ('no'). Has no effect if no aggregation function is supplied, or if the dimension is explicitly specified as a slicer.",
      "required": false,
      "type": "string",
      "enum": [
        "group",
        "aggregate",
        "no"
      ],
      "x-binding-name": "dimensionAggregation",
      "x-name-pattern": "^[^:]+:[^:]+::aggregation$"
    },
    "prefix:dimension::category": {
      "name": "prefix:dimension::category",
      "in": "query",
      "description": "Specifies whether the dimension is a slicer, a dicer, or unchanged. If an aggregation function is specified, facts are aggregated along slicers and grouped along dicers (default: unchanged).",
      "required": false,
      "type": "string",
      "enum": [
        "slicer",
        "dicer",
        "unchanged"
      ],
      "x-binding-name": "dimensionsCategory",
      "x-binding-description": "Specifies whether the dimension is a slicer, a dicer, or unchanged. If an aggregation function is specified, facts are aggregated along this dimension (default: unchanged).",
      "x-name-pattern": "^[^:]+:[^:]+::category$"
    },
    "prefix:dimension::column": {
      "name": "prefix:dimension::column",
      "in": "query",
      "description": "If the dimension is visible in the output, specifies the position at which it appears in the output fact table (default: arbitrary order).",
      "required": false,
      "type": "integer",
      "x-binding-name": "dimensionColumns",
      "x-name-pattern": "^[^:]+:[^:]+::column$"
    },
    "prefix:dimension::default": {
      "name": "prefix:dimension::default",
      "in": "query",
      "description": "The default value of the dimension [prefix:dimension] that should be returned if the dimension was not provided explicitly for a fact. Accepted format: prefix:dimension::default.",
      "required": false,
      "type": "string",
      "x-binding-name": "defaultDimensionValues",
      "x-binding-description": "Specifies the default value of the given dimensions that should be returned if the dimension was not provided explicitly for a fact. Each key is in the form  prefix:dimension::default, each value is a string.",
      "x-name-pattern": "^[^:]+:[^:]+::default$"
    },
    "prefix:dimension::slicer": {
      "name": "prefix:dimension::slicer",
      "in": "query",
      "description": "[Deprecated] Specifies whether the dimension is a slicer (true) or not (false). Slicer dimensions do not appear in the output fact table, and if an aggregation function is specified, facts are aggregated along this dimension (default: false).",
      "required": false,
      "type": "boolean",
      "x-binding-name": "dimensionSlicers",
      "x-name-pattern": "^[^:]+:[^:]+::slicer$",
      "x-deprecated": true
    },
    "prefix:dimension::type": {
      "name": "prefix:dimension::type",
      "in": "query",
      "description": "Sets the dimension to be a typed dimension with the specified type (default: xbrl:Entity/xbrl:Period/xbrl:Unit/xbrl28:Archive are typed string, others are explicit dimensions; Some further dimensions may have default types depending on the profile).",
      "required": false,
      "type": "string",
      "x-binding-name": "dimensionTypes",
      "x-binding-description": "Sets the given dimensions to be typed dimensions with the specified type (Default: xbrl:Entity/xbrl:Period/xbrl:Unit/xbrl28:Archive are typed string, others are explicit dimensions; Some further dimensions may have default types depending on the profile). Each key is in the form prefix:dimension::type, each value is a string.",
      "x-name-pattern": "^[^:]+:[^:]+::type$"
    },
    "prefix:dimension::visible": {
      "name": "prefix:dimension::visible",
      "in": "query",
      "description": "Specifies whether the dimension is visible in the output. Only applies to dimensions defined as slicers. Default: false for slicers, but always true for dicers.",
      "required": false,
      "type": "boolean",
      "x-binding-name": "dimensionsVisible",
      "x-name-pattern": "^[^:]+:[^:]+::visible$"
    },
    "profile-name": {
      "name": "profile-name",
      "in": "query",
      "description": "Specifies which profile to use, which will enable some parameters or modify hypercube queries accordingly. The default depends on the underlying repository",
      "required": false,
      "type": "string",
      "enum": [
        "sec",
        "generic",
        "japan",
        "boi"
      ]
    },
    "report": {
      "name": "report",
      "in": "query",
      "description": "The report to use as a context to retrieve the facts. In particular, concept maps and rules found in this report will be used. (default: none).",
      "required": false,
      "type": "string",
      "enum": [
        "FundamentalAccountingConcepts",
        "null"
      ]
    },
    "reportElement": {
      "name": "reportElement",
      "in": "query",
      "description": "The name of the report element to search for, to retrieve a section, a component or a report element (e.g. us-gaap:Goodwill).",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "reportElement_SINGLE": {
      "name": "reportElement",
      "in": "query",
      "description": "The name of the report element (e.g. us-gaap:Goodwill).",
      "required": false,
      "type": "string"
    },
    "row": {
      "name": "row",
      "in": "query",
      "description": "Filters the spreadsheet to display only the rows specified (default: no filter). Deactivates elimination.",
      "required": false,
      "format": "xs:positiveInteger",
      "type": "array",
      "items": {
        "type": "integer"
      },
      "collectionFormat": "multi"
    },
    "rule": {
      "name": "rule",
      "in": "query",
      "description": "[Deprecated, use report] The rules that should be used to resolve the concept (default: none).",
      "required": false,
      "type": "string",
      "enum": [
        "FundamentalAccountingConcepts",
        "null"
      ],
      "x-deprecated": true
    },
    "section": {
      "name": "section",
      "in": "query",
      "description": "The URI of a particular section, to retrieve a section, component or report element.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi"
    },
    "section_SINGLE": {
      "name": "section",
      "in": "query",
      "description": "The URI of a particular section.",
      "required": false,
      "type": "string"
    },
    "sic": {
      "name": "sic",
      "in": "query",
      "description": "The SIC (industry group) of a company, to retrieve entities, archives, sections, components or dice facts.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "x-profile": [
        "sec"
      ]
    },
    "skip": {
      "name": "skip",
      "in": "query",
      "description": "Skip the first [skip] results.",
      "required": false,
      "type": "integer",
      "format": "xs:nonNegativeInteger"
    },
    "entity-tag": {
      "name": "entity-tag",
      "in": "query",
      "description": "The tag of an entity (such as an index), to retrieve entities, archives, sections, components or dice facts.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "enum": [
        "DOW30",
        "SP500",
        "RUSSEL1000",
        "FORTUNE100",
        "PJI",
        "ALL"
      ],
      "x-profile": [
        "sec",
        "japan"
      ]
    },
    "ticker": {
      "name": "ticker",
      "in": "query",
      "description": "The ticker of a company, to retrieve entities, archives, sections, components or dice facts.",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "x-profile": [
        "sec",
        "japan"
      ]
    },
    "token": {
      "name": "token",
      "in": "query",
      "description": "The token that allows you to use this API. Gives you read (GET) and/or write (POST, DELETE, PATCH) credentials.",
      "required": true,
      "type": "string"
    },
    "top": {
      "name": "top",
      "in": "query",
      "description": "Output only the first [top] results (default: no limit).",
      "required": false,
      "type": "integer",
      "format": "xs:nonNegativeInteger"
    },
    "validate_components": {
      "name": "validate",
      "in": "query",
      "description": "Whether to run validation on the output components (default: false). Adds a column ValidationErrors",
      "required": false,
      "type": "boolean",
      "default": false
    },
    "validate_facts": {
      "name": "validate",
      "in": "query",
      "description": "Whether or not to stamp facts for validity (default is false).",
      "required": false,
      "type": "boolean",
      "default": false
    }
  },
  "responses": {},
  "securityDefinitions": {},
  "security": [],
  "tags": [],
  "externalDocs": {
    "description": "An Introduction To The Cell Store REST API",
    "url": "http://28msec.github.io/cellstore-pro"
  }
}